{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\nexport const api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.response.use(response => response, error => {\n  console.error('API Error:', error);\n  return Promise.reject(error);\n});\nexport const practiceApi = {\n  predictPractice: async (modelId, landmarks, expectedSign, settings) => {\n    return api.post('/prediction/practice-predict', {\n      modelId,\n      landmarks,\n      expectedSign,\n      settings\n    });\n  },\n  updatePracticeProgress: async (modelId, sign, action, correct, attempts) => {\n    return api.post('/learning/progress', {\n      modelId,\n      sign,\n      action,\n      correct,\n      attempts\n    });\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","response","use","error","console","Promise","reject","practiceApi","predictPractice","modelId","landmarks","expectedSign","settings","post","updatePracticeProgress","sign","action","correct","attempts"],"sources":["C:/Users/gabo1/OneDrive/Escritorio/FinalProject/frontend/src/utils/api.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\r\n\r\nexport const api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    console.error('API Error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const practiceApi = {\r\n  predictPractice: async (modelId: string, landmarks: any[], expectedSign: string, settings?: any) => {\r\n    return api.post('/prediction/practice-predict', {\r\n      modelId,\r\n      landmarks,\r\n      expectedSign,\r\n      settings\r\n    });\r\n  },\r\n  \r\n  updatePracticeProgress: async (modelId: string, sign: string, action: string, correct?: boolean, attempts?: number) => {\r\n    return api.post('/learning/progress', {\r\n      modelId,\r\n      sign,\r\n      action,\r\n      correct,\r\n      attempts\r\n    });\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAEjF,OAAO,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EAC9BC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEFH,GAAG,CAACI,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC1BD,QAAQ,IAAKA,QAAQ,EACrBE,KAAK,IAAK;EACTC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;EAClC,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMI,WAAW,GAAG;EACzBC,eAAe,EAAE,MAAAA,CAAOC,OAAe,EAAEC,SAAgB,EAAEC,YAAoB,EAAEC,QAAc,KAAK;IAClG,OAAOhB,GAAG,CAACiB,IAAI,CAAC,8BAA8B,EAAE;MAC9CJ,OAAO;MACPC,SAAS;MACTC,YAAY;MACZC;IACF,CAAC,CAAC;EACJ,CAAC;EAEDE,sBAAsB,EAAE,MAAAA,CAAOL,OAAe,EAAEM,IAAY,EAAEC,MAAc,EAAEC,OAAiB,EAAEC,QAAiB,KAAK;IACrH,OAAOtB,GAAG,CAACiB,IAAI,CAAC,oBAAoB,EAAE;MACpCJ,OAAO;MACPM,IAAI;MACJC,MAAM;MACNC,OAAO;MACPC;IACF,CAAC,CAAC;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}