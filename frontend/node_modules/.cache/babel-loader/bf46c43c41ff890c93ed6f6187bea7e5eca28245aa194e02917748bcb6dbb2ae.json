{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\quisp\\\\Desktop\\\\FinalProject\\\\frontend\\\\src\\\\components\\\\SignLanguageCalculator.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback, useMemo } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { XCircle, CheckCircle, RefreshCw, Power, Zap } from \"lucide-react\"; // Iconos para la UI\nimport toast from \"react-hot-toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// ImportaciÃ³n de tipo simulada\n\n// --- 1. DefiniciÃ³n de la Utilidad API (Reemplaza ../utils/api) ---\n/**\r\n * FunciÃ³n simulada para llamar al endpoint de predicciÃ³n.\r\n * Utiliza fetch para realizar la llamada POST.\r\n */\nconst api = {\n  post: async (path, data) => {\n    const apiKey = \"\"; // La clave API se inyecta por el entorno\n    const predictionApiUrl = `https://generativelanguage.googleapis.com/v1beta/models/predict:predict?key=${apiKey}`;\n    const payload = {\n      modelId: data.modelId,\n      instances: [{\n        landmarks: data.landmarks\n      }]\n    };\n    const response = await fetch(predictionApiUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    });\n\n    // SimulaciÃ³n de una respuesta exitosa, ya que el servicio real no estÃ¡ disponible.\n    if (response.ok) {\n      // SimulaciÃ³n de datos para demostraciÃ³n.\n      // Simulamos que el modelo puede devolver nÃºmeros (0-9), operadores (+,-,*,/), 'equal' y 'clear'.\n      const mockPredictions = [\"1\", \"2\", \"3\", \"4\", \"+\", \"*\", \"equal\", \"clear\"];\n      const randomPrediction = mockPredictions[Math.floor(Math.random() * mockPredictions.length)];\n      return {\n        data: {\n          prediction: randomPrediction,\n          confidence: 0.95\n        }\n      };\n    } else {\n      throw new Error(`API call failed with status: ${response.status}`);\n    }\n  }\n};\n\n// --- 2. DefiniciÃ³n de la Utilidad MediaPipe (Reemplaza ../utils/mediapipe) ---\n\n// Tipo de utilidad simple para MediaPipe (simplificada para el entorno de archivo Ãºnico)\n\n// ImplementaciÃ³n simulada de createMediaPipeHandler\nconst createMediaPipeHandler = () => {\n  let stream = null;\n  let animationFrameId = null;\n  let videoElement = null;\n  let canvasElement = null;\n  let onResultsCallback = null;\n  const runDetectionLoop = () => {\n    if (!videoElement || !canvasElement || !onResultsCallback) return;\n\n    // 1. DetecciÃ³n (SIMULADA)\n    const mockResults = {\n      multiHandLandmarks: stream ? [\n      // SimulaciÃ³n de 21 puntos de referencia cuando la cÃ¡mara estÃ¡ activa\n      Array.from({\n        length: 21\n      }, (_, i) => ({\n        x: Math.random(),\n        y: Math.random(),\n        z: Math.random(),\n        visibility: 1\n      }))] : [],\n      image: canvasElement,\n      // SimulaciÃ³n de la imagen para dibujar\n      multiHandedness: stream ? [{\n        label: 'Right',\n        score: 0.9\n      }] : []\n    };\n    onResultsCallback(mockResults);\n\n    // 2. Dibujo en Canvas (Simplificado)\n    const canvasCtx = canvasElement.getContext('2d');\n    if (canvasCtx) {\n      canvasCtx.save();\n      canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n      if (videoElement.readyState === videoElement.HAVE_ENOUGH_DATA) {\n        // Dibujar el video\n        canvasCtx.drawImage(videoElement, 0, 0, canvasElement.width, canvasElement.height);\n\n        // Indicador de mano simulada\n        if (mockResults.multiHandLandmarks && mockResults.multiHandLandmarks.length > 0) {\n          canvasCtx.fillStyle = 'rgba(74, 222, 128, 0.5)'; // Verde de Tailwind 400\n          canvasCtx.beginPath();\n          canvasCtx.arc(canvasElement.width / 2, canvasElement.height / 2, 20, 0, 2 * Math.PI);\n          canvasCtx.fill();\n        }\n      } else {\n        // Texto de \"Cargando\" si el video no estÃ¡ listo\n        canvasCtx.fillStyle = 'white';\n        canvasCtx.fillRect(0, 0, canvasElement.width, canvasElement.height);\n        canvasCtx.fillStyle = 'black';\n        canvasCtx.font = '24px sans-serif';\n        canvasCtx.textAlign = 'center';\n        canvasCtx.fillText('CÃ¡mara activa, cargando video...', canvasElement.width / 2, canvasElement.height / 2);\n      }\n      canvasCtx.restore();\n    }\n    animationFrameId = requestAnimationFrame(runDetectionLoop);\n  };\n  const initialize = async (video, canvas, onResults) => {\n    videoElement = video;\n    canvasElement = canvas;\n    onResultsCallback = onResults;\n    try {\n      stream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      video.srcObject = stream;\n      await new Promise(resolve => {\n        video.onloadedmetadata = () => {\n          video.play();\n          resolve(true);\n        };\n      });\n      runDetectionLoop();\n      return true;\n    } catch (error) {\n      console.error(\"Error al acceder a la cÃ¡mara:\", error);\n      return false;\n    }\n  };\n  const stop = () => {\n    if (animationFrameId !== null) {\n      cancelAnimationFrame(animationFrameId);\n      animationFrameId = null;\n    }\n    if (stream) {\n      stream.getTracks().forEach(track => track.stop());\n      stream = null;\n      if (videoElement) {\n        videoElement.srcObject = null;\n      }\n    }\n    // Limpiar canvas al detener\n    if (canvasElement) {\n      const canvasCtx = canvasElement.getContext('2d');\n      canvasCtx === null || canvasCtx === void 0 ? void 0 : canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n    }\n  };\n  return {\n    initialize,\n    stop\n  };\n};\n\n// Fin de la definiciÃ³n de la Utilidad MediaPipe\n// -------------------------------------------------------------------\n\n// âœ… Props para recibir el ID del modelo\n\n// --- Constantes de la Calculadora ---\nconst RECOGNITION_INTERVAL_MS = 600; // Frecuencia de reconocimiento automÃ¡tico\nconst MIN_CONFIDENCE_THRESHOLD = 0.7; // Umbral mÃ­nimo de confianza para aceptar una seÃ±a\n\n// --- ImplementaciÃ³n Segura para la EvaluaciÃ³n de Expresiones ---\nconst safeEvaluateExpression = expr => {\n  const sanitizedExpr = expr.replace(/[^0-9\\s\\.\\+\\-\\*\\/]/g, '');\n  if (sanitizedExpr.length === 0) {\n    return \"0\";\n  }\n  try {\n    const result = new Function('return ' + sanitizedExpr)();\n    if (typeof result === 'number' && isFinite(result)) {\n      return result.toString();\n    }\n    throw new Error('Invalid calculation result');\n  } catch (e) {\n    console.error(\"Safe evaluation error:\", e);\n    return \"Error\";\n  }\n};\n\n// --- Nuevo Tipo de Estado para la Calculadora de 3 Bloques ---\n\nconst SignLanguageCalculator = ({\n  modelId\n}) => {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const mediaPipeHandler = useRef(null);\n  const [cameraActive, setCameraActive] = useState(false);\n  const [isInitializing, setIsInitializing] = useState(false);\n  const [handsDetected, setHandsDetected] = useState(false);\n  const [isAutoRecognizing, setIsAutoRecognizing] = useState(true); // Auto-reconocimiento por defecto\n\n  const [isPredicting, setIsPredicting] = useState(false); // Estado de carga de la predicciÃ³n\n\n  // Estado que contiene los tres bloques de la nueva interfaz\n  const [calcState, setCalcState] = useState({\n    num1: '',\n    operator: '',\n    num2: '',\n    result: '',\n    activeBlock: 'num1'\n  });\n  const lastPredictionRef = useRef(null);\n  const currentLandmarksRef = useRef(null);\n  const recognitionIntervalRef = useRef(null);\n  const isDarkMode = useMemo(() => document.body.classList.contains('dark'), []);\n  const onResults = useCallback(results => {\n    const hasHands = results.multiHandLandmarks && results.multiHandLandmarks.length > 0;\n    setHandsDetected(hasHands);\n    if (hasHands && results.multiHandLandmarks[0] && results.multiHandLandmarks[0].length === 21) {\n      currentLandmarksRef.current = results.multiHandLandmarks[0];\n    } else {\n      currentLandmarksRef.current = null;\n    }\n  }, []);\n\n  // FunciÃ³n para resetear el estado y comenzar una nueva operaciÃ³n\n  const resetCalculator = useCallback(() => {\n    setCalcState({\n      num1: '',\n      operator: '',\n      num2: '',\n      result: '',\n      activeBlock: 'num1'\n    });\n  }, []);\n  const startCamera = useCallback(async () => {\n    if (!videoRef.current || !canvasRef.current) {\n      toast.error(\"Error: No se encontrÃ³ el video/canvas\");\n      return;\n    }\n    setIsInitializing(true);\n    try {\n      if (mediaPipeHandler.current) {\n        mediaPipeHandler.current.stop();\n      }\n      mediaPipeHandler.current = createMediaPipeHandler();\n      const success = await mediaPipeHandler.current.initialize(videoRef.current, canvasRef.current, onResults);\n      if (success) {\n        setCameraActive(true);\n        setIsAutoRecognizing(true);\n        toast.success(\"CÃ¡mara y reconocimiento iniciados\", {\n          icon: \"ðŸŽ¥\"\n        });\n      }\n    } catch (err) {\n      console.error(err);\n      toast.error(\"Error al iniciar la cÃ¡mara\");\n    } finally {\n      setIsInitializing(false);\n    }\n  }, [onResults]);\n  const stopCamera = useCallback(() => {\n    if (mediaPipeHandler.current) {\n      mediaPipeHandler.current.stop();\n      setCameraActive(false);\n      setIsAutoRecognizing(false);\n      setHandsDetected(false);\n      currentLandmarksRef.current = null;\n      lastPredictionRef.current = null;\n      if (recognitionIntervalRef.current !== null) {\n        clearInterval(recognitionIntervalRef.current);\n      }\n      toast.success(\"CÃ¡mara y reconocimiento detenidos\", {\n        icon: \"ðŸ›‘\"\n      });\n    }\n  }, []);\n\n  // FunciÃ³n para procesar la seÃ±a detectada y actualizar el estado de la calculadora\n  const processPrediction = useCallback(prediction => {\n    setCalcState(prev => {\n      // Si hay un resultado previo, \"clear\" implÃ­cito para comenzar\n      if (prev.result !== '' && prediction !== 'clear') {\n        const newState = {\n          num1: '',\n          operator: '',\n          num2: '',\n          result: '',\n          activeBlock: 'num1'\n        };\n        // Si el siguiente es un nÃºmero, lo ponemos en num1 (permite encadenar: ej. 5 + 3 = 8, luego seÃ±a 2 -> 2 + ...)\n        if (!isNaN(Number(prediction))) {\n          return {\n            ...newState,\n            num1: prediction,\n            activeBlock: 'operator'\n          };\n        }\n        // Si es un operador o cualquier otra cosa, simplemente reseteamos\n        return newState;\n      }\n\n      // LÃ³gica de borrado\n      if (prediction === \"clear\") {\n        return {\n          num1: '',\n          operator: '',\n          num2: '',\n          result: '',\n          activeBlock: 'num1'\n        };\n      }\n\n      // Predicciones de nÃºmeros (0-9)\n      if (!isNaN(Number(prediction))) {\n        const num = prediction;\n        if (prev.activeBlock === 'num1') {\n          return {\n            ...prev,\n            num1: prev.num1 + num,\n            activeBlock: 'operator'\n          };\n        }\n        if (prev.activeBlock === 'num2') {\n          return {\n            ...prev,\n            num2: prev.num2 + num,\n            activeBlock: 'complete'\n          };\n        }\n        return prev; // Ignorar nÃºmeros si se espera operador o si ya estÃ¡ completa\n      }\n\n      // Predicciones de operadores (+, -, *, /)\n      if ([\"+\", \"-\", \"*\", \"/\"].includes(prediction)) {\n        if (prev.activeBlock === 'operator' && prev.num1 !== '') {\n          // Si ya hay un operador, lo reemplazamos\n          return {\n            ...prev,\n            operator: prediction,\n            activeBlock: 'num2'\n          };\n        }\n        return prev; // Ignorar si num1 estÃ¡ vacÃ­o o si se espera num2\n      }\n\n      // PredicciÃ³n de Igual (=)\n      if (prediction === \"equal\") {\n        // Activar cÃ¡lculo solo si todos los campos requeridos estÃ¡n presentes\n        if (prev.num1 && prev.operator && prev.num2) {\n          const expression = `${prev.num1}${prev.operator}${prev.num2}`;\n          const evalResult = safeEvaluateExpression(expression);\n          if (evalResult === \"Error\") {\n            toast.error(\"ExpresiÃ³n invÃ¡lida\");\n            return {\n              ...prev,\n              result: \"Error\"\n            };\n          }\n\n          // CÃ¡lculo exitoso: movemos el resultado a num1 y limpiamos para encadenar\n          return {\n            num1: evalResult,\n            operator: '',\n            num2: '',\n            result: evalResult,\n            activeBlock: 'operator'\n          };\n        } else {\n          toast.error(\"Faltan nÃºmeros u operador para calcular (Ej: Num1 + Num2)\");\n          return prev;\n        }\n      }\n\n      // Ignorar cualquier otra seÃ±a no definida\n      return prev;\n    });\n  }, []);\n\n  // FunciÃ³n central para predecir la seÃ±a\n  const recognizeSign = useCallback(async (isAuto = false) => {\n    if (!currentLandmarksRef.current) {\n      if (!isAuto) toast.error(\"No se detecta la mano\");\n      return;\n    }\n    if (isPredicting) return;\n    setIsPredicting(true);\n    try {\n      const landmarksPayload = currentLandmarksRef.current.map(l => ({\n        x: l.x,\n        y: l.y,\n        z: l.z\n      }));\n      const response = await api.post(\"/prediction/predict\", {\n        modelId,\n        landmarks: landmarksPayload\n      });\n      const {\n        prediction,\n        confidence\n      } = response.data;\n\n      // 1. Manejo de baja confianza\n      if (confidence < MIN_CONFIDENCE_THRESHOLD) {\n        if (!isAuto) toast.error(\"SeÃ±a no clara, intenta de nuevo\");\n        lastPredictionRef.current = null;\n        return;\n      }\n\n      // 2. Control de duplicados en modo automÃ¡tico\n      if (isAuto && prediction === lastPredictionRef.current) {\n        return;\n      }\n      lastPredictionRef.current = prediction;\n\n      // 3. Procesamiento de la seÃ±a\n      processPrediction(prediction);\n    } catch (err) {\n      console.error(\"Error predicting sign:\", err);\n      if (!isAuto) toast.error(\"Error al comunicarse con el modelo\");\n    } finally {\n      setIsPredicting(false);\n    }\n  }, [modelId, isPredicting, processPrediction]);\n\n  // EFECTO para el Reconocimiento AutomÃ¡tico\n  useEffect(() => {\n    if (cameraActive && isAutoRecognizing) {\n      if (recognitionIntervalRef.current !== null) {\n        clearInterval(recognitionIntervalRef.current);\n      }\n      const intervalId = setInterval(() => {\n        if (currentLandmarksRef.current) {\n          recognizeSign(true);\n        }\n      }, RECOGNITION_INTERVAL_MS);\n      recognitionIntervalRef.current = intervalId;\n      return () => {\n        if (recognitionIntervalRef.current !== null) {\n          clearInterval(recognitionIntervalRef.current);\n          recognitionIntervalRef.current = null;\n        }\n      };\n    } else if (recognitionIntervalRef.current !== null) {\n      clearInterval(recognitionIntervalRef.current);\n      recognitionIntervalRef.current = null;\n    }\n  }, [cameraActive, isAutoRecognizing, recognizeSign]);\n\n  // Limpieza al desmontar el componente\n  useEffect(() => {\n    return () => {\n      stopCamera();\n    };\n  }, [stopCamera]);\n\n  // Componente de Bloque de Entrada para la UI\n  const InputBlock = ({\n    title,\n    value,\n    isActive\n  }) => {\n    const defaultClasses = \"p-4 rounded-xl font-bold text-center border-2 transition-all duration-300 shadow-md\";\n\n    // Clases dinÃ¡micas basadas en el tema y el estado\n    const background = isDarkMode ? 'bg-gray-700' : 'bg-white';\n    const border = isActive ? 'border-indigo-400 ring-4 ring-indigo-500/50' : isDarkMode ? 'border-gray-600' : 'border-gray-300';\n    const valueColor = isDarkMode ? 'text-white' : 'text-gray-900';\n    const titleColor = isDarkMode ? 'text-gray-400' : 'text-gray-600';\n    return /*#__PURE__*/_jsxDEV(motion.div, {\n      className: `${defaultClasses} ${background} ${border}`,\n      animate: {\n        scale: isActive ? 1.05 : 1\n      },\n      transition: {\n        type: \"spring\",\n        stiffness: 300,\n        damping: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: `text-sm uppercase tracking-wider ${titleColor}`,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `text-3xl mt-1 ${valueColor}`,\n        children: value || (isActive ? 'âœ‹' : 'â€”')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 9\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-1 md:grid-cols-4 gap-8 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"md:col-span-1 space-y-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `rounded-2xl shadow-xl p-5 ${isDarkMode ? 'bg-gray-800 border border-gray-700' : 'bg-white border border-gray-200'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: `font-extrabold text-xl mb-4 ${isDarkMode ? 'text-white' : 'text-gray-900'}`,\n          children: \"Controles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n          whileHover: {\n            scale: 1.02\n          },\n          whileTap: {\n            scale: 0.98\n          },\n          onClick: cameraActive ? stopCamera : startCamera,\n          disabled: isInitializing,\n          className: `w-full px-4 py-3 rounded-xl font-bold text-white transition-all duration-300 flex items-center justify-center gap-2 shadow-lg ${isInitializing ? \"bg-gray-500 cursor-not-allowed\" : cameraActive ? \"bg-red-600 hover:bg-red-700\" : \"bg-blue-600 hover:bg-blue-700\"}`,\n          children: [isInitializing ? /*#__PURE__*/_jsxDEV(RefreshCw, {\n            className: \"animate-spin w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 15\n          }, this) : cameraActive ? /*#__PURE__*/_jsxDEV(Power, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Power, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 15\n          }, this), isInitializing ? \"Inicializando...\" : cameraActive ? \"Detener CÃ¡mara\" : \"Iniciar CÃ¡mara\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this), cameraActive && /*#__PURE__*/_jsxDEV(motion.button, {\n          whileHover: {\n            scale: 1.02\n          },\n          whileTap: {\n            scale: 0.98\n          },\n          onClick: () => setIsAutoRecognizing(prev => !prev),\n          className: `mt-3 w-full px-4 py-3 rounded-xl font-bold text-white transition-all duration-300 flex items-center justify-center gap-2 shadow-lg ${isAutoRecognizing ? \"bg-purple-600 hover:bg-purple-700\" : \"bg-yellow-600 hover:bg-yellow-700\"}`,\n          children: [/*#__PURE__*/_jsxDEV(Zap, {\n            className: `w-5 h-5 ${isAutoRecognizing ? 'animate-pulse' : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 19\n          }, this), isAutoRecognizing ? \"Reconocimiento AutomÃ¡tico ON\" : \"Activar Reconocimiento\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 15\n        }, this), cameraActive && !isAutoRecognizing && /*#__PURE__*/_jsxDEV(motion.button, {\n          whileHover: {\n            scale: 1.02\n          },\n          whileTap: {\n            scale: 0.98\n          },\n          onClick: () => recognizeSign(false),\n          disabled: isPredicting || !handsDetected,\n          className: `mt-3 w-full px-4 py-3 rounded-xl font-bold text-white transition-all duration-300 flex items-center justify-center gap-2 ${isPredicting ? \"bg-indigo-400 cursor-wait\" : \"bg-indigo-600 hover:bg-indigo-700\"} disabled:opacity-50`,\n          children: [isPredicting ? /*#__PURE__*/_jsxDEV(RefreshCw, {\n            className: \"animate-spin w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 35\n          }, this) : 'âœ‹', \"Reconocer Se\\xF1a (Manual)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 15\n        }, this), (calcState.num1 || calcState.operator || calcState.num2) && /*#__PURE__*/_jsxDEV(motion.button, {\n          whileHover: {\n            scale: 1.02\n          },\n          whileTap: {\n            scale: 0.98\n          },\n          onClick: resetCalculator,\n          className: \"mt-3 w-full px-4 py-3 rounded-xl font-bold text-white transition-all duration-300 flex items-center justify-center gap-2 bg-pink-600 hover:bg-pink-700 shadow-lg\",\n          children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 19\n          }, this), \"Limpiar Calculadora\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `rounded-2xl shadow-xl p-5 ${isDarkMode ? 'bg-gray-800 border border-gray-700' : 'bg-white border border-gray-200'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: `font-extrabold text-xl mb-2 ${isDarkMode ? 'text-white' : 'text-gray-900'}`,\n          children: \"Estado del Sistema\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"flex items-center gap-2 font-medium\",\n          children: handsDetected ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-green-500 flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n              className: \"w-5 h-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 17\n            }, this), \" Mano detectada\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-red-500 flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(XCircle, {\n              className: \"w-5 h-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 17\n            }, this), \" Esperando mano\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 11\n        }, this), isAutoRecognizing && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"flex items-center gap-2 mt-2 text-purple-500 font-medium\",\n          children: [/*#__PURE__*/_jsxDEV(Zap, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 17\n          }, this), \" Reconocimiento Autom\\xE1tico Activo\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"md:col-span-3 space-y-6\",\n      children: [/*#__PURE__*/_jsxDEV(motion.h2, {\n        initial: {\n          opacity: 0,\n          y: 10\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        className: `text-3xl font-extrabold text-center ${isDarkMode ? 'text-blue-300' : 'text-gray-800'}`,\n        children: \"Calculadora con Lenguaje de Se\\xF1as\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative bg-black rounded-2xl overflow-hidden shadow-2xl mx-auto max-w-2xl aspect-video\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          className: \"hidden\",\n          autoPlay: true,\n          muted: true,\n          playsInline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          width: 640,\n          height: 480,\n          className: \"w-full h-full object-cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 11\n        }, this), !cameraActive && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute inset-0 flex flex-col items-center justify-center bg-gray-900/90 text-white p-4\",\n          children: [/*#__PURE__*/_jsxDEV(Power, {\n            className: \"w-10 h-10 mb-3 text-red-400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-lg font-medium\",\n            children: \"Pulsa \\\"Iniciar C\\xE1mara\\\" para comenzar.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 15\n          }, this), isInitializing && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-2 text-sm text-gray-400 flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n              className: \"w-5 h-5 animate-spin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 100\n            }, this), \" Cargando MediaPipe...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-2xl mx-auto p-4 rounded-2xl shadow-2xl space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-5 gap-4 items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-span-2\",\n            children: /*#__PURE__*/_jsxDEV(InputBlock, {\n              title: \"N\\xDAMERO 1\",\n              value: calcState.num1,\n              isActive: calcState.activeBlock === 'num1'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-span-1\",\n            children: /*#__PURE__*/_jsxDEV(InputBlock, {\n              title: \"SE\\xD1A\",\n              value: calcState.operator,\n              isActive: calcState.activeBlock === 'operator'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-span-2\",\n            children: /*#__PURE__*/_jsxDEV(InputBlock, {\n              title: \"N\\xDAMERO 2\",\n              value: calcState.num2,\n              isActive: calcState.activeBlock === 'num2'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `w-full p-6 rounded-2xl shadow-inner transition-colors duration-300 ${isDarkMode ? 'bg-gray-800 border-2 border-indigo-600' : 'bg-white border-2 border-indigo-400'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: `text-right text-sm uppercase font-semibold ${isDarkMode ? 'text-indigo-400' : 'text-indigo-600'}`,\n            children: \"Resultado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `text-right text-6xl font-extrabold mt-1 transition-colors duration-300 ${isDarkMode ? 'text-white' : 'text-gray-900'}`,\n            children: /*#__PURE__*/_jsxDEV(motion.span, {\n              initial: {\n                y: 20,\n                opacity: 0\n              },\n              animate: {\n                y: 0,\n                opacity: 1\n              },\n              transition: {\n                duration: 0.3\n              },\n              children: calcState.result || '0'\n            }, calcState.result, false, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 488,\n    columnNumber: 5\n  }, this);\n};\n_s(SignLanguageCalculator, \"UMuxjgIgJVgrVAO3Cg0PMyP2A9g=\");\n_c = SignLanguageCalculator;\nexport default SignLanguageCalculator;\nvar _c;\n$RefreshReg$(_c, \"SignLanguageCalculator\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","useMemo","motion","XCircle","CheckCircle","RefreshCw","Power","Zap","toast","jsxDEV","_jsxDEV","api","post","path","data","apiKey","predictionApiUrl","payload","modelId","instances","landmarks","response","fetch","method","headers","body","JSON","stringify","ok","mockPredictions","randomPrediction","Math","floor","random","length","prediction","confidence","Error","status","createMediaPipeHandler","stream","animationFrameId","videoElement","canvasElement","onResultsCallback","runDetectionLoop","mockResults","multiHandLandmarks","Array","from","_","i","x","y","z","visibility","image","multiHandedness","label","score","canvasCtx","getContext","save","clearRect","width","height","readyState","HAVE_ENOUGH_DATA","drawImage","fillStyle","beginPath","arc","PI","fill","fillRect","font","textAlign","fillText","restore","requestAnimationFrame","initialize","video","canvas","onResults","navigator","mediaDevices","getUserMedia","srcObject","Promise","resolve","onloadedmetadata","play","error","console","stop","cancelAnimationFrame","getTracks","forEach","track","RECOGNITION_INTERVAL_MS","MIN_CONFIDENCE_THRESHOLD","safeEvaluateExpression","expr","sanitizedExpr","replace","result","Function","isFinite","toString","e","SignLanguageCalculator","_s","videoRef","canvasRef","mediaPipeHandler","cameraActive","setCameraActive","isInitializing","setIsInitializing","handsDetected","setHandsDetected","isAutoRecognizing","setIsAutoRecognizing","isPredicting","setIsPredicting","calcState","setCalcState","num1","operator","num2","activeBlock","lastPredictionRef","currentLandmarksRef","recognitionIntervalRef","isDarkMode","document","classList","contains","results","hasHands","current","resetCalculator","startCamera","success","icon","err","stopCamera","clearInterval","processPrediction","prev","newState","isNaN","Number","num","includes","expression","evalResult","recognizeSign","isAuto","landmarksPayload","map","l","intervalId","setInterval","InputBlock","title","value","isActive","defaultClasses","background","border","valueColor","titleColor","div","className","animate","scale","transition","type","stiffness","damping","children","fileName","_jsxFileName","lineNumber","columnNumber","button","whileHover","whileTap","onClick","disabled","h2","initial","opacity","ref","autoPlay","muted","playsInline","span","duration","_c","$RefreshReg$"],"sources":["C:/Users/quisp/Desktop/FinalProject/frontend/src/components/SignLanguageCalculator.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback, useMemo } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport {\r\n  XCircle,\r\n  CheckCircle,\r\n  RefreshCw,\r\n  Power,\r\n  Zap,\r\n} from \"lucide-react\"; // Iconos para la UI\r\nimport toast from \"react-hot-toast\";\r\nimport { Results } from \"@mediapipe/hands\"; // ImportaciÃ³n de tipo simulada\r\n\r\n// --- 1. DefiniciÃ³n de la Utilidad API (Reemplaza ../utils/api) ---\r\n/**\r\n * FunciÃ³n simulada para llamar al endpoint de predicciÃ³n.\r\n * Utiliza fetch para realizar la llamada POST.\r\n */\r\nconst api = {\r\n  post: async (path: string, data: any) => {\r\n    const apiKey = \"\"; // La clave API se inyecta por el entorno\r\n    const predictionApiUrl = `https://generativelanguage.googleapis.com/v1beta/models/predict:predict?key=${apiKey}`; \r\n    \r\n    const payload = {\r\n        modelId: data.modelId,\r\n        instances: [{\r\n            landmarks: data.landmarks\r\n        }]\r\n    };\r\n\r\n    const response = await fetch(predictionApiUrl, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(payload)\r\n    });\r\n\r\n    // SimulaciÃ³n de una respuesta exitosa, ya que el servicio real no estÃ¡ disponible.\r\n    if (response.ok) {\r\n        // SimulaciÃ³n de datos para demostraciÃ³n.\r\n        // Simulamos que el modelo puede devolver nÃºmeros (0-9), operadores (+,-,*,/), 'equal' y 'clear'.\r\n        const mockPredictions = [\"1\", \"2\", \"3\", \"4\", \"+\", \"*\", \"equal\", \"clear\"];\r\n        const randomPrediction = mockPredictions[Math.floor(Math.random() * mockPredictions.length)];\r\n\r\n        return { \r\n            data: { \r\n                prediction: randomPrediction, \r\n                confidence: 0.95 \r\n            }\r\n        };\r\n    } else {\r\n        throw new Error(`API call failed with status: ${response.status}`);\r\n    }\r\n  }\r\n};\r\n\r\n\r\n// --- 2. DefiniciÃ³n de la Utilidad MediaPipe (Reemplaza ../utils/mediapipe) ---\r\n\r\n// Tipo de utilidad simple para MediaPipe (simplificada para el entorno de archivo Ãºnico)\r\ninterface MediaPipeHandler {\r\n    initialize: (videoElement: HTMLVideoElement, canvasElement: HTMLCanvasElement, onResults: (results: Results) => void) => Promise<boolean>;\r\n    stop: () => void;\r\n}\r\n\r\n// ImplementaciÃ³n simulada de createMediaPipeHandler\r\nconst createMediaPipeHandler = (): MediaPipeHandler => {\r\n    let stream: MediaStream | null = null;\r\n    let animationFrameId: number | null = null;\r\n    let videoElement: HTMLVideoElement | null = null;\r\n    let canvasElement: HTMLCanvasElement | null = null;\r\n    let onResultsCallback: ((results: Results) => void) | null = null;\r\n\r\n    const runDetectionLoop = () => {\r\n        if (!videoElement || !canvasElement || !onResultsCallback) return;\r\n\r\n        // 1. DetecciÃ³n (SIMULADA)\r\n        const mockResults: Results = {\r\n            multiHandLandmarks: stream ? [\r\n                // SimulaciÃ³n de 21 puntos de referencia cuando la cÃ¡mara estÃ¡ activa\r\n                Array.from({ length: 21 }, (_, i) => ({\r\n                    x: Math.random(),\r\n                    y: Math.random(),\r\n                    z: Math.random(),\r\n                    visibility: 1\r\n                }))\r\n            ] : [],\r\n            image: canvasElement, // SimulaciÃ³n de la imagen para dibujar\r\n            multiHandedness: stream ? [{ label: 'Right', score: 0.9 }] : [],\r\n        } as unknown as Results; \r\n\r\n        onResultsCallback(mockResults);\r\n\r\n        // 2. Dibujo en Canvas (Simplificado)\r\n        const canvasCtx = canvasElement.getContext('2d');\r\n        if (canvasCtx) {\r\n            canvasCtx.save();\r\n            canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\r\n\r\n            if (videoElement.readyState === videoElement.HAVE_ENOUGH_DATA) {\r\n                // Dibujar el video\r\n                canvasCtx.drawImage(videoElement, 0, 0, canvasElement.width, canvasElement.height);\r\n\r\n                // Indicador de mano simulada\r\n                if (mockResults.multiHandLandmarks && mockResults.multiHandLandmarks.length > 0) {\r\n                    canvasCtx.fillStyle = 'rgba(74, 222, 128, 0.5)'; // Verde de Tailwind 400\r\n                    canvasCtx.beginPath();\r\n                    canvasCtx.arc(canvasElement.width / 2, canvasElement.height / 2, 20, 0, 2 * Math.PI);\r\n                    canvasCtx.fill();\r\n                }\r\n            } else {\r\n                 // Texto de \"Cargando\" si el video no estÃ¡ listo\r\n                canvasCtx.fillStyle = 'white';\r\n                canvasCtx.fillRect(0, 0, canvasElement.width, canvasElement.height);\r\n                canvasCtx.fillStyle = 'black';\r\n                canvasCtx.font = '24px sans-serif';\r\n                canvasCtx.textAlign = 'center';\r\n                canvasCtx.fillText('CÃ¡mara activa, cargando video...', canvasElement.width / 2, canvasElement.height / 2);\r\n            }\r\n            canvasCtx.restore();\r\n        }\r\n\r\n        animationFrameId = requestAnimationFrame(runDetectionLoop);\r\n    };\r\n\r\n    const initialize = async (video: HTMLVideoElement, canvas: HTMLCanvasElement, onResults: (results: Results) => void) => {\r\n        videoElement = video;\r\n        canvasElement = canvas;\r\n        onResultsCallback = onResults;\r\n\r\n        try {\r\n            stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n            video.srcObject = stream;\r\n            \r\n            await new Promise((resolve) => {\r\n                video.onloadedmetadata = () => {\r\n                    video.play();\r\n                    resolve(true);\r\n                };\r\n            });\r\n\r\n            runDetectionLoop();\r\n            return true;\r\n        } catch (error) {\r\n            console.error(\"Error al acceder a la cÃ¡mara:\", error);\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const stop = () => {\r\n        if (animationFrameId !== null) {\r\n            cancelAnimationFrame(animationFrameId);\r\n            animationFrameId = null;\r\n        }\r\n        if (stream) {\r\n            stream.getTracks().forEach(track => track.stop());\r\n            stream = null;\r\n            if (videoElement) {\r\n                videoElement.srcObject = null;\r\n            }\r\n        }\r\n         // Limpiar canvas al detener\r\n        if (canvasElement) {\r\n            const canvasCtx = canvasElement.getContext('2d');\r\n            canvasCtx?.clearRect(0, 0, canvasElement.width, canvasElement.height);\r\n        }\r\n    };\r\n\r\n    return { initialize, stop };\r\n};\r\n\r\n// Fin de la definiciÃ³n de la Utilidad MediaPipe\r\n// -------------------------------------------------------------------\r\n\r\n\r\n// âœ… Props para recibir el ID del modelo\r\ntype Props = {\r\n  modelId: string;\r\n};\r\n\r\n// --- Constantes de la Calculadora ---\r\nconst RECOGNITION_INTERVAL_MS = 600; // Frecuencia de reconocimiento automÃ¡tico\r\nconst MIN_CONFIDENCE_THRESHOLD = 0.7; // Umbral mÃ­nimo de confianza para aceptar una seÃ±a\r\n\r\n\r\n// --- ImplementaciÃ³n Segura para la EvaluaciÃ³n de Expresiones ---\r\nconst safeEvaluateExpression = (expr: string): string => {\r\n  const sanitizedExpr = expr.replace(/[^0-9\\s\\.\\+\\-\\*\\/]/g, '');\r\n\r\n  if (sanitizedExpr.length === 0) {\r\n      return \"0\";\r\n  }\r\n\r\n  try {\r\n    const result = new Function('return ' + sanitizedExpr)();\r\n    \r\n    if (typeof result === 'number' && isFinite(result)) {\r\n        return result.toString();\r\n    }\r\n    throw new Error('Invalid calculation result');\r\n  } catch (e) {\r\n    console.error(\"Safe evaluation error:\", e);\r\n    return \"Error\";\r\n  }\r\n};\r\n\r\n\r\n// --- Nuevo Tipo de Estado para la Calculadora de 3 Bloques ---\r\ninterface CalculationState {\r\n    num1: string;\r\n    operator: string;\r\n    num2: string;\r\n    result: string;\r\n    activeBlock: 'num1' | 'operator' | 'num2' | 'complete'; // Define quÃ© bloque estÃ¡ listo para recibir la siguiente seÃ±a\r\n}\r\n\r\nconst SignLanguageCalculator: React.FC<Props> = ({ modelId }) => {\r\n  const videoRef = useRef<HTMLVideoElement>(null);\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const mediaPipeHandler = useRef<MediaPipeHandler | null>(null);\r\n\r\n  const [cameraActive, setCameraActive] = useState(false);\r\n  const [isInitializing, setIsInitializing] = useState(false);\r\n  const [handsDetected, setHandsDetected] = useState(false);\r\n  const [isAutoRecognizing, setIsAutoRecognizing] = useState(true); // Auto-reconocimiento por defecto\r\n\r\n  const [isPredicting, setIsPredicting] = useState(false); // Estado de carga de la predicciÃ³n\r\n\r\n  // Estado que contiene los tres bloques de la nueva interfaz\r\n  const [calcState, setCalcState] = useState<CalculationState>({\r\n      num1: '',\r\n      operator: '',\r\n      num2: '',\r\n      result: '',\r\n      activeBlock: 'num1',\r\n  });\r\n  \r\n  const lastPredictionRef = useRef<string | null>(null); \r\n  const currentLandmarksRef = useRef<any[] | null>(null); \r\n  const recognitionIntervalRef = useRef<number | null>(null);\r\n\r\n  const isDarkMode = useMemo(() => document.body.classList.contains('dark'), []);\r\n\r\n  const onResults = useCallback((results: any): void => { \r\n    const hasHands =\r\n      results.multiHandLandmarks && results.multiHandLandmarks.length > 0;\r\n    setHandsDetected(hasHands);\r\n\r\n    if (hasHands && results.multiHandLandmarks[0] && results.multiHandLandmarks[0].length === 21) {\r\n      currentLandmarksRef.current = results.multiHandLandmarks[0];\r\n    } else {\r\n      currentLandmarksRef.current = null;\r\n    }\r\n  }, []);\r\n\r\n  // FunciÃ³n para resetear el estado y comenzar una nueva operaciÃ³n\r\n  const resetCalculator = useCallback(() => {\r\n    setCalcState({ num1: '', operator: '', num2: '', result: '', activeBlock: 'num1' });\r\n  }, []);\r\n\r\n\r\n  const startCamera = useCallback(async () => {\r\n    if (!videoRef.current || !canvasRef.current) {\r\n      toast.error(\"Error: No se encontrÃ³ el video/canvas\");\r\n      return;\r\n    }\r\n    setIsInitializing(true);\r\n    try {\r\n      if (mediaPipeHandler.current) {\r\n        mediaPipeHandler.current.stop();\r\n      }\r\n\r\n      mediaPipeHandler.current = createMediaPipeHandler();\r\n      const success = await mediaPipeHandler.current.initialize(\r\n        videoRef.current,\r\n        canvasRef.current,\r\n        onResults\r\n      );\r\n\r\n      if (success) {\r\n        setCameraActive(true);\r\n        setIsAutoRecognizing(true); \r\n        toast.success(\"CÃ¡mara y reconocimiento iniciados\", { icon: \"ðŸŽ¥\" });\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      toast.error(\"Error al iniciar la cÃ¡mara\");\r\n    } finally {\r\n      setIsInitializing(false);\r\n    }\r\n  }, [onResults]);\r\n\r\n  const stopCamera = useCallback(() => {\r\n    if (mediaPipeHandler.current) {\r\n      mediaPipeHandler.current.stop();\r\n      setCameraActive(false);\r\n      setIsAutoRecognizing(false);\r\n      setHandsDetected(false);\r\n      currentLandmarksRef.current = null;\r\n      lastPredictionRef.current = null;\r\n      if (recognitionIntervalRef.current !== null) {\r\n        clearInterval(recognitionIntervalRef.current);\r\n      }\r\n      toast.success(\"CÃ¡mara y reconocimiento detenidos\", { icon: \"ðŸ›‘\" });\r\n    }\r\n  }, []);\r\n\r\n  // FunciÃ³n para procesar la seÃ±a detectada y actualizar el estado de la calculadora\r\n  const processPrediction = useCallback((prediction: string) => {\r\n    setCalcState(prev => {\r\n        // Si hay un resultado previo, \"clear\" implÃ­cito para comenzar\r\n        if (prev.result !== '' && prediction !== 'clear') {\r\n            const newState = { num1: '', operator: '', num2: '', result: '', activeBlock: 'num1' } as CalculationState;\r\n            // Si el siguiente es un nÃºmero, lo ponemos en num1 (permite encadenar: ej. 5 + 3 = 8, luego seÃ±a 2 -> 2 + ...)\r\n            if (!isNaN(Number(prediction))) {\r\n                return { ...newState, num1: prediction, activeBlock: 'operator' };\r\n            }\r\n            // Si es un operador o cualquier otra cosa, simplemente reseteamos\r\n            return newState;\r\n        }\r\n\r\n        // LÃ³gica de borrado\r\n        if (prediction === \"clear\") {\r\n            return { num1: '', operator: '', num2: '', result: '', activeBlock: 'num1' };\r\n        }\r\n\r\n        // Predicciones de nÃºmeros (0-9)\r\n        if (!isNaN(Number(prediction))) {\r\n            const num = prediction;\r\n            if (prev.activeBlock === 'num1') {\r\n                return { ...prev, num1: prev.num1 + num, activeBlock: 'operator' };\r\n            }\r\n            if (prev.activeBlock === 'num2') {\r\n                return { ...prev, num2: prev.num2 + num, activeBlock: 'complete' };\r\n            }\r\n            return prev; // Ignorar nÃºmeros si se espera operador o si ya estÃ¡ completa\r\n        }\r\n\r\n        // Predicciones de operadores (+, -, *, /)\r\n        if ([\"+\", \"-\", \"*\", \"/\"].includes(prediction)) {\r\n            if (prev.activeBlock === 'operator' && prev.num1 !== '') {\r\n                // Si ya hay un operador, lo reemplazamos\r\n                return { ...prev, operator: prediction, activeBlock: 'num2' };\r\n            }\r\n            return prev; // Ignorar si num1 estÃ¡ vacÃ­o o si se espera num2\r\n        }\r\n\r\n        // PredicciÃ³n de Igual (=)\r\n        if (prediction === \"equal\") {\r\n            // Activar cÃ¡lculo solo si todos los campos requeridos estÃ¡n presentes\r\n            if (prev.num1 && prev.operator && prev.num2) {\r\n                const expression = `${prev.num1}${prev.operator}${prev.num2}`;\r\n                const evalResult = safeEvaluateExpression(expression);\r\n                \r\n                if (evalResult === \"Error\") {\r\n                    toast.error(\"ExpresiÃ³n invÃ¡lida\");\r\n                    return { ...prev, result: \"Error\" };\r\n                }\r\n\r\n                // CÃ¡lculo exitoso: movemos el resultado a num1 y limpiamos para encadenar\r\n                return { \r\n                    num1: evalResult, \r\n                    operator: '', \r\n                    num2: '', \r\n                    result: evalResult, \r\n                    activeBlock: 'operator' \r\n                };\r\n            } else {\r\n                toast.error(\"Faltan nÃºmeros u operador para calcular (Ej: Num1 + Num2)\");\r\n                return prev;\r\n            }\r\n        }\r\n\r\n        // Ignorar cualquier otra seÃ±a no definida\r\n        return prev;\r\n    });\r\n  }, []);\r\n\r\n  // FunciÃ³n central para predecir la seÃ±a\r\n  const recognizeSign = useCallback(async (isAuto: boolean = false) => {\r\n    if (!currentLandmarksRef.current) {\r\n      if (!isAuto) toast.error(\"No se detecta la mano\");\r\n      return;\r\n    }\r\n\r\n    if (isPredicting) return;\r\n    setIsPredicting(true);\r\n\r\n    try {\r\n      const landmarksPayload = currentLandmarksRef.current.map((l: any) => ({\r\n        x: l.x,\r\n        y: l.y,\r\n        z: l.z,\r\n      }));\r\n\r\n      const response = await api.post(\"/prediction/predict\", {\r\n        modelId,\r\n        landmarks: landmarksPayload,\r\n      });\r\n\r\n      const { prediction, confidence } = response.data;\r\n\r\n      // 1. Manejo de baja confianza\r\n      if (confidence < MIN_CONFIDENCE_THRESHOLD) {\r\n        if (!isAuto) toast.error(\"SeÃ±a no clara, intenta de nuevo\");\r\n        lastPredictionRef.current = null; \r\n        return;\r\n      }\r\n      \r\n      // 2. Control de duplicados en modo automÃ¡tico\r\n      if (isAuto && prediction === lastPredictionRef.current) {\r\n          return;\r\n      }\r\n      lastPredictionRef.current = prediction;\r\n\r\n      // 3. Procesamiento de la seÃ±a\r\n      processPrediction(prediction);\r\n      \r\n    } catch (err) {\r\n      console.error(\"Error predicting sign:\", err);\r\n      if (!isAuto) toast.error(\"Error al comunicarse con el modelo\");\r\n    } finally {\r\n      setIsPredicting(false);\r\n    }\r\n  }, [modelId, isPredicting, processPrediction]);\r\n\r\n\r\n  // EFECTO para el Reconocimiento AutomÃ¡tico\r\n  useEffect(() => {\r\n    if (cameraActive && isAutoRecognizing) {\r\n        if (recognitionIntervalRef.current !== null) {\r\n            clearInterval(recognitionIntervalRef.current);\r\n        }\r\n\r\n        const intervalId = setInterval(() => {\r\n            if (currentLandmarksRef.current) {\r\n                recognizeSign(true); \r\n            }\r\n        }, RECOGNITION_INTERVAL_MS);\r\n\r\n        recognitionIntervalRef.current = intervalId as unknown as number;\r\n\r\n        return () => {\r\n            if (recognitionIntervalRef.current !== null) {\r\n                clearInterval(recognitionIntervalRef.current);\r\n                recognitionIntervalRef.current = null;\r\n            }\r\n        };\r\n    } else if (recognitionIntervalRef.current !== null) {\r\n        clearInterval(recognitionIntervalRef.current);\r\n        recognitionIntervalRef.current = null;\r\n    }\r\n  }, [cameraActive, isAutoRecognizing, recognizeSign]);\r\n\r\n  // Limpieza al desmontar el componente\r\n  useEffect(() => {\r\n      return () => {\r\n          stopCamera();\r\n      }\r\n  }, [stopCamera]);\r\n\r\n  // Componente de Bloque de Entrada para la UI\r\n  const InputBlock = ({ title, value, isActive }: { title: string; value: string; isActive: boolean }) => {\r\n    const defaultClasses = \"p-4 rounded-xl font-bold text-center border-2 transition-all duration-300 shadow-md\";\r\n    \r\n    // Clases dinÃ¡micas basadas en el tema y el estado\r\n    const background = isDarkMode ? 'bg-gray-700' : 'bg-white';\r\n    const border = isActive \r\n        ? 'border-indigo-400 ring-4 ring-indigo-500/50' \r\n        : (isDarkMode ? 'border-gray-600' : 'border-gray-300');\r\n    const valueColor = isDarkMode ? 'text-white' : 'text-gray-900';\r\n    const titleColor = isDarkMode ? 'text-gray-400' : 'text-gray-600';\r\n\r\n    return (\r\n        <motion.div\r\n            className={`${defaultClasses} ${background} ${border}`}\r\n            animate={{ scale: isActive ? 1.05 : 1 }}\r\n            transition={{ type: \"spring\", stiffness: 300, damping: 20 }}\r\n        >\r\n            <p className={`text-sm uppercase tracking-wider ${titleColor}`}>{title}</p>\r\n            <div className={`text-3xl mt-1 ${valueColor}`}>\r\n                {value || (isActive ? 'âœ‹' : 'â€”')}\r\n            </div>\r\n        </motion.div>\r\n    );\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8 p-4\">\r\n      \r\n      {/* Sidebar - Controles */}\r\n      <aside className=\"md:col-span-1 space-y-6\">\r\n        <div className={`rounded-2xl shadow-xl p-5 ${isDarkMode ? 'bg-gray-800 border border-gray-700' : 'bg-white border border-gray-200'}`}>\r\n          <h3 className={`font-extrabold text-xl mb-4 ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>\r\n            Controles \r\n          </h3>\r\n          \r\n          {/* BotÃ³n Iniciar/Detener CÃ¡mara */}\r\n          <motion.button\r\n            whileHover={{ scale: 1.02 }}\r\n            whileTap={{ scale: 0.98 }}\r\n            onClick={cameraActive ? stopCamera : startCamera}\r\n            disabled={isInitializing}\r\n            className={`w-full px-4 py-3 rounded-xl font-bold text-white transition-all duration-300 flex items-center justify-center gap-2 shadow-lg ${\r\n              isInitializing ? \"bg-gray-500 cursor-not-allowed\" : \r\n              cameraActive ? \"bg-red-600 hover:bg-red-700\" : \"bg-blue-600 hover:bg-blue-700\"\r\n            }`}\r\n          >\r\n            {isInitializing ? (\r\n              <RefreshCw className=\"animate-spin w-5 h-5\" />\r\n            ) : cameraActive ? (\r\n              <Power className=\"w-5 h-5\" />\r\n            ) : (\r\n              <Power className=\"w-5 h-5\" />\r\n            )}\r\n            {isInitializing ? \"Inicializando...\" : cameraActive ? \"Detener CÃ¡mara\" : \"Iniciar CÃ¡mara\"}\r\n          </motion.button>\r\n\r\n          {/* BotÃ³n de Reconocimiento AutomÃ¡tico (Toggle) */}\r\n          {cameraActive && (\r\n              <motion.button\r\n                  whileHover={{ scale: 1.02 }}\r\n                  whileTap={{ scale: 0.98 }}\r\n                  onClick={() => setIsAutoRecognizing(prev => !prev)}\r\n                  className={`mt-3 w-full px-4 py-3 rounded-xl font-bold text-white transition-all duration-300 flex items-center justify-center gap-2 shadow-lg ${\r\n                      isAutoRecognizing ? \"bg-purple-600 hover:bg-purple-700\" : \"bg-yellow-600 hover:bg-yellow-700\"\r\n                  }`}\r\n              >\r\n                  <Zap className={`w-5 h-5 ${isAutoRecognizing ? 'animate-pulse' : ''}`} />\r\n                  {isAutoRecognizing ? \"Reconocimiento AutomÃ¡tico ON\" : \"Activar Reconocimiento\"}\r\n              </motion.button>\r\n          )}\r\n\r\n          {/* BotÃ³n de Reconocimiento Manual (solo visible si el auto-rec estÃ¡ apagado) */}\r\n          {cameraActive && !isAutoRecognizing && (\r\n              <motion.button\r\n                  whileHover={{ scale: 1.02 }}\r\n                  whileTap={{ scale: 0.98 }}\r\n                  onClick={() => recognizeSign(false)}\r\n                  disabled={isPredicting || !handsDetected}\r\n                  className={`mt-3 w-full px-4 py-3 rounded-xl font-bold text-white transition-all duration-300 flex items-center justify-center gap-2 ${\r\n                    isPredicting ? \"bg-indigo-400 cursor-wait\" : \"bg-indigo-600 hover:bg-indigo-700\"\r\n                  } disabled:opacity-50`}\r\n              >\r\n                  {isPredicting ? <RefreshCw className=\"animate-spin w-5 h-5\" /> : 'âœ‹'}\r\n                  Reconocer SeÃ±a (Manual)\r\n              </motion.button>\r\n          )}\r\n\r\n          {/* BotÃ³n de Limpiar */}\r\n          {(calcState.num1 || calcState.operator || calcState.num2) && (\r\n             <motion.button\r\n                  whileHover={{ scale: 1.02 }}\r\n                  whileTap={{ scale: 0.98 }}\r\n                  onClick={resetCalculator}\r\n                  className=\"mt-3 w-full px-4 py-3 rounded-xl font-bold text-white transition-all duration-300 flex items-center justify-center gap-2 bg-pink-600 hover:bg-pink-700 shadow-lg\"\r\n              >\r\n                  <RefreshCw className=\"w-5 h-5\" />\r\n                  Limpiar Calculadora\r\n              </motion.button>\r\n          )}\r\n\r\n        </div>\r\n\r\n        {/* Estado de la DetecciÃ³n */}\r\n        <div className={`rounded-2xl shadow-xl p-5 ${isDarkMode ? 'bg-gray-800 border border-gray-700' : 'bg-white border border-gray-200'}`}>\r\n          <h3 className={`font-extrabold text-xl mb-2 ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>\r\n            Estado del Sistema\r\n          </h3>\r\n          <p className=\"flex items-center gap-2 font-medium\">\r\n            {handsDetected ? (\r\n              <span className=\"text-green-500 flex items-center gap-2\">\r\n                <CheckCircle className=\"w-5 h-5\" /> Mano detectada\r\n              </span>\r\n            ) : (\r\n              <span className=\"text-red-500 flex items-center gap-2\">\r\n                <XCircle className=\"w-5 h-5\" /> Esperando mano\r\n              </span>\r\n            )}\r\n          </p>\r\n          {isAutoRecognizing && (\r\n              <p className=\"flex items-center gap-2 mt-2 text-purple-500 font-medium\">\r\n                <Zap className=\"w-5 h-5\" /> Reconocimiento AutomÃ¡tico Activo\r\n              </p>\r\n          )}\r\n        </div>\r\n      </aside>\r\n\r\n      {/* Main Area - Video y Pantalla de la Calculadora */}\r\n      <section className=\"md:col-span-3 space-y-6\">\r\n        <motion.h2\r\n          initial={{ opacity: 0, y: 10 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className={`text-3xl font-extrabold text-center ${isDarkMode ? 'text-blue-300' : 'text-gray-800'}`}\r\n        >\r\n          Calculadora con Lenguaje de SeÃ±as\r\n        </motion.h2>\r\n\r\n        {/* Contenedor de Video/Canvas */}\r\n        <div className=\"relative bg-black rounded-2xl overflow-hidden shadow-2xl mx-auto max-w-2xl aspect-video\">\r\n          <video ref={videoRef} className=\"hidden\" autoPlay muted playsInline />\r\n          <canvas\r\n            ref={canvasRef}\r\n            width={640}\r\n            height={480}\r\n            className=\"w-full h-full object-cover\"\r\n          />\r\n\r\n          {!cameraActive && (\r\n            <div className=\"absolute inset-0 flex flex-col items-center justify-center bg-gray-900/90 text-white p-4\">\r\n              <Power className=\"w-10 h-10 mb-3 text-red-400\" />\r\n              <p className=\"text-lg font-medium\">Pulsa \"Iniciar CÃ¡mara\" para comenzar.</p>\r\n              {isInitializing && <p className=\"mt-2 text-sm text-gray-400 flex items-center gap-2\"><RefreshCw className=\"w-5 h-5 animate-spin\" /> Cargando MediaPipe...</p>}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Bloques de Entrada de la Calculadora (3 Bloques) */}\r\n        <div \r\n            className=\"max-w-2xl mx-auto p-4 rounded-2xl shadow-2xl space-y-6\"\r\n        >\r\n            <div className=\"grid grid-cols-5 gap-4 items-center\">\r\n                {/* Bloque NÃºmero 1 */}\r\n                <div className=\"col-span-2\">\r\n                    <InputBlock \r\n                        title=\"NÃšMERO 1\" \r\n                        value={calcState.num1} \r\n                        isActive={calcState.activeBlock === 'num1'} \r\n                    />\r\n                </div>\r\n\r\n                {/* Bloque Operador */}\r\n                <div className=\"col-span-1\">\r\n                    <InputBlock \r\n                        title=\"SEÃ‘A\" \r\n                        value={calcState.operator} \r\n                        isActive={calcState.activeBlock === 'operator'} \r\n                    />\r\n                </div>\r\n\r\n                {/* Bloque NÃºmero 2 */}\r\n                <div className=\"col-span-2\">\r\n                    <InputBlock \r\n                        title=\"NÃšMERO 2\" \r\n                        value={calcState.num2} \r\n                        isActive={calcState.activeBlock === 'num2'} \r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {/* Pantalla del Resultado */}\r\n            <div className={`w-full p-6 rounded-2xl shadow-inner transition-colors duration-300 ${isDarkMode ? 'bg-gray-800 border-2 border-indigo-600' : 'bg-white border-2 border-indigo-400'}`}>\r\n                <p className={`text-right text-sm uppercase font-semibold ${isDarkMode ? 'text-indigo-400' : 'text-indigo-600'}`}>\r\n                    Resultado\r\n                </p>\r\n                <div className={`text-right text-6xl font-extrabold mt-1 transition-colors duration-300 ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>\r\n                    <motion.span\r\n                        key={calcState.result} \r\n                        initial={{ y: 20, opacity: 0 }}\r\n                        animate={{ y: 0, opacity: 1 }}\r\n                        transition={{ duration: 0.3 }}\r\n                    >\r\n                        {calcState.result || '0'}\r\n                    </motion.span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignLanguageCalculator;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}