{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\quisp\\\\Desktop\\\\FinalProject\\\\frontend\\\\src\\\\components\\\\SignLanguageCalculator.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback, useMemo } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { XCircle, CheckCircle, RefreshCw, Power, Zap, Equal } from \"lucide-react\";\nimport toast from \"react-hot-toast\";\n\n// =========================================================================\n//                           SIMULACIÓN DE MEDIAPIPE Y API\n// =========================================================================\n\n// Tipado simulado para los resultados de MediaPipe\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// SIMULACIÓN DE LA API de Predicción (en un entorno real, esto sería una llamada HTTP)\nconst api = {\n  post: async (path, data) => {\n    // Simulación de las predicciones que haría un modelo real (números y operadores)\n    const mockPredictions = [\"1\", \"2\", \"+\", \"3\", \"*\", \"4\", \"5\", \"-\", \"6\", \"7\", \"8\", \"/\", \"9\", \"0\", \"clear\"];\n    const randomPrediction = mockPredictions[Math.floor(Math.random() * mockPredictions.length)];\n    await new Promise(resolve => setTimeout(resolve, 150)); // Simula latencia\n    return {\n      data: {\n        prediction: randomPrediction,\n        confidence: Math.random() * 0.3 + 0.7 // Confianza mínima 70%\n      }\n    };\n  }\n};\n\n// SIMULACIÓN DEL MANEJADOR DE MEDIA PIPE (Cámara y Detección)\n\nconst createMediaPipeHandler = () => {\n  let stream = null;\n  let animationFrameId = null;\n  let videoElement = null;\n  let canvasElement = null;\n  let onResultsCallback = null;\n  const runDetectionLoop = () => {\n    if (!videoElement || !canvasElement || !onResultsCallback) {\n      if (animationFrameId !== null) cancelAnimationFrame(animationFrameId);\n      return;\n    }\n    const canvasCtx = canvasElement.getContext('2d');\n    if (!canvasCtx) return;\n    canvasCtx.save();\n    canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n\n    // Simula la captura de video\n    if (videoElement.readyState === videoElement.HAVE_ENOUGH_DATA) {\n      canvasCtx.drawImage(videoElement, 0, 0, canvasElement.width, canvasElement.height);\n    } else {\n      // Si el video no está cargado o detenido, muestra un fondo\n      canvasCtx.fillStyle = 'black';\n      canvasCtx.fillRect(0, 0, canvasElement.width, canvasElement.height);\n    }\n\n    // Lógica de simulación de detección de manos\n    const shouldSimulateHands = stream && Math.random() > 0.1; // 90% de probabilidad de tener manos\n    const mockResults = {\n      multiHandLandmarks: shouldSimulateHands ? [[\n      // Simulación de 21 landmarks (puntos de la mano)\n      Array.from({\n        length: 21\n      }, (_, i) => ({\n        x: Math.random(),\n        y: Math.random(),\n        z: Math.random()\n      }))]] : null,\n      // Puede ser NULL, activando la corrección de TS\n      image: canvasElement,\n      multiHandedness: shouldSimulateHands ? [{\n        label: 'Right',\n        score: 0.9\n      }] : null\n    };\n    onResultsCallback(mockResults);\n    canvasCtx.restore();\n    animationFrameId = requestAnimationFrame(runDetectionLoop);\n  };\n  const initialize = async (video, canvas, onResults) => {\n    videoElement = video;\n    canvasElement = canvas;\n    onResultsCallback = onResults;\n    try {\n      stream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      video.srcObject = stream;\n      await new Promise(resolve => {\n        video.onloadedmetadata = () => {\n          video.play();\n          resolve(true);\n        };\n      });\n      runDetectionLoop();\n      return true;\n    } catch (error) {\n      console.error(\"Error al acceder a la cámara:\", error);\n      return false;\n    }\n  };\n  const stop = () => {\n    if (animationFrameId !== null) {\n      cancelAnimationFrame(animationFrameId);\n      animationFrameId = null;\n    }\n    if (stream) {\n      stream.getTracks().forEach(track => track.stop());\n      stream = null;\n      if (videoElement) {\n        videoElement.srcObject = null;\n      }\n    }\n    // Limpiar el canvas al detener\n    if (canvasElement) {\n      const canvasCtx = canvasElement.getContext('2d');\n      if (canvasCtx) {\n        canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n        canvasCtx.fillStyle = '#4b5563'; // gris oscuro\n        canvasCtx.fillRect(0, 0, canvasElement.width, canvasElement.height);\n        canvasCtx.fillStyle = 'white';\n        canvasCtx.font = '24px Inter, sans-serif';\n        canvasCtx.textAlign = 'center';\n        canvasCtx.fillText('Cámara detenida', canvasElement.width / 2, canvasElement.height / 2);\n      }\n    }\n  };\n  return {\n    initialize,\n    stop\n  };\n};\n// =========================================================================\n\n/**\r\n * Tipos y Constantes\r\n */\n\nconst RECOGNITION_INTERVAL_MS = 650;\nconst MIN_CONFIDENCE_THRESHOLD = 0.7;\n/**\r\n * Función auxiliar para evaluar expresiones de forma segura (sin `eval`)\r\n */\nconst safeEvaluateExpression = expr => {\n  // Solo permite números, operadores (+, -, *, /) y punto decimal.\n  const sanitized = expr.replace(/[^0-9+\\-*/.]/g, \"\");\n  if (!sanitized) return \"0\";\n  try {\n    // eslint-disable-next-line no-new-func\n    const val = Function(`\"use strict\"; return (${sanitized});`)();\n    if (typeof val === \"number\" && isFinite(val)) return String(val);\n    return \"Error\";\n  } catch {\n    return \"Error\";\n  }\n};\n\n/**\r\n * Componente visual para los bloques de entrada\r\n */\nconst InputBlock = ({\n  title,\n  value,\n  isActive,\n  dark\n}) => {\n  const base = \"p-4 rounded-xl font-bold text-center border-2 transition-all duration-300 shadow-md\";\n  const bg = dark ? \"bg-gray-800\" : \"bg-white\";\n  const border = isActive ? \"border-indigo-400 ring-4 ring-indigo-500/30\" : dark ? \"border-gray-600\" : \"border-gray-300\";\n  const text = dark ? \"text-white\" : \"text-gray-900\";\n  const titleColor = dark ? \"text-gray-400\" : \"text-gray-600\";\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: `${base} ${bg} ${border}`,\n    animate: {\n      scale: isActive ? 1.03 : 1\n    },\n    transition: {\n      type: \"spring\",\n      stiffness: 300,\n      damping: 25\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: `text-sm uppercase tracking-wider ${titleColor}`,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `text-3xl mt-1 ${text}`,\n      children: value || (isActive ? \"✋\" : \"—\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n};\n\n/**\r\n * Componente principal\r\n */\n_c = InputBlock;\nconst SignLanguageCalculator = ({\n  modelId\n}) => {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const mediaPipeHandler = useRef(null);\n  const [cameraActive, setCameraActive] = useState(false);\n  const [isInitializing, setIsInitializing] = useState(false);\n  const [handsDetected, setHandsDetected] = useState(false);\n  const [isAutoRecognizing, setIsAutoRecognizing] = useState(true);\n  const [isPredicting, setIsPredicting] = useState(false);\n  const [calcState, setCalcState] = useState({\n    num1: \"\",\n    operator: \"\",\n    num2: \"\",\n    result: \"\",\n    activeBlock: \"num1\"\n  });\n  const lastPredictionRef = useRef(null);\n  // Almacena solo los landmarks necesarios para la predicción\n  const currentLandmarksRef = useRef(null);\n  // Usa number | undefined, que es el tipo correcto para window.setInterval/clearInterval\n  const recognitionIntervalRef = useRef(undefined);\n  const isDarkMode = useMemo(() => document.body.classList.contains(\"dark\"), []);\n\n  /**\r\n   * CORRECCIÓN 1: Manejo robusto de `null` para `multiHandLandmarks`\r\n   * Callback que recibe los resultados simulados de MediaPipe.\r\n   */\n  const onResults = useCallback(results => {\n    // ⚠️ Corrección: Verificamos explícitamente si es null y si el array tiene elementos.\n    const hasHands = !!(results.multiHandLandmarks && results.multiHandLandmarks.length > 0);\n    setHandsDetected(hasHands);\n    if (hasHands) {\n      // Si hay manos, el array no será null. Usamos el primer array de landmarks.\n      const rawLandmarks = results.multiHandLandmarks[0];\n\n      // Asumimos que el modelo solo necesita las coordenadas x, y, z\n      if (rawLandmarks && rawLandmarks.length > 0) {\n        currentLandmarksRef.current = rawLandmarks.map(l => ({\n          x: l.x,\n          y: l.y,\n          z: l.z\n        }));\n      } else {\n        currentLandmarksRef.current = null;\n      }\n    } else {\n      currentLandmarksRef.current = null;\n    }\n  }, []);\n\n  /**\r\n   * Inicializa la cámara y el manejador de MediaPipe\r\n   */\n  const startCamera = useCallback(async () => {\n    if (!videoRef.current || !canvasRef.current) {\n      toast.error(\"No se encontró video/canvas\");\n      return;\n    }\n    setIsInitializing(true);\n    try {\n      if (mediaPipeHandler.current) mediaPipeHandler.current.stop();\n      mediaPipeHandler.current = createMediaPipeHandler();\n      const ok = await mediaPipeHandler.current.initialize(videoRef.current, canvasRef.current, onResults);\n      if (!ok) throw new Error(\"Error inicializando MediaPipe\");\n      setCameraActive(true);\n      setIsAutoRecognizing(true);\n      toast.success(\"Cámara iniciada\");\n    } catch (err) {\n      console.error(err);\n      toast.error(\"No se pudo iniciar la cámara\");\n    } finally {\n      setIsInitializing(false);\n    }\n  }, [onResults]);\n\n  /**\r\n   * CORRECCIÓN 2: Manejo de `undefined` para `clearInterval`\r\n   * Detiene la cámara y limpia el intervalo de reconocimiento.\r\n   */\n  const stopCamera = useCallback(() => {\n    if (mediaPipeHandler.current) mediaPipeHandler.current.stop();\n    setCameraActive(false);\n    setIsAutoRecognizing(false);\n    setHandsDetected(false);\n    currentLandmarksRef.current = null;\n    lastPredictionRef.current = null;\n\n    // ⚠️ Corrección: Verificamos si la referencia tiene un valor antes de limpiar.\n    if (recognitionIntervalRef.current !== undefined) {\n      clearInterval(recognitionIntervalRef.current);\n      recognitionIntervalRef.current = undefined; // Lo reiniciamos al estado inicial seguro\n    }\n    toast.success(\"Cámara detenida\");\n  }, []);\n\n  // reset calculator state\n  const resetCalculator = useCallback(() => {\n    setCalcState({\n      num1: \"\",\n      operator: \"\",\n      num2: \"\",\n      result: \"\",\n      activeBlock: \"num1\"\n    });\n    toast(\"Calculadora limpia\", {\n      icon: \"🧹\"\n    });\n  }, []);\n\n  /**\r\n   * Ejecuta la lógica de cálculo\r\n   */\n  const calculateResult = useCallback(() => {\n    setCalcState(prev => {\n      if (!prev.num1 || !prev.operator || !prev.num2) {\n        toast.error(\"Asegúrate de tener un número, un operador y otro número.\", {\n          icon: \"🤔\"\n        });\n        return prev;\n      }\n      const expression = `${prev.num1}${prev.operator}${prev.num2}`;\n      const evalResult = safeEvaluateExpression(expression);\n      if (evalResult === \"Error\") {\n        toast.error(\"Expresión inválida\", {\n          icon: \"⚠️\"\n        });\n        return {\n          ...prev,\n          result: \"Error\"\n        };\n      }\n\n      // Cálculo exitoso: el resultado se convierte en el Num1 para encadenar\n      toast.success(`Resultado: ${evalResult}`, {\n        icon: \"✅\"\n      });\n      return {\n        num1: evalResult,\n        operator: '',\n        num2: '',\n        result: evalResult,\n        activeBlock: 'operator' // Esperando el siguiente operador\n      };\n    });\n  }, []);\n\n  /**\r\n   * Procesa la predicción de la seña en el estado de la calculadora\r\n   */\n  const processPrediction = useCallback(prediction => {\n    setCalcState(prev => {\n      // Limpiar (Clear)\n      if (prediction === \"clear\") {\n        return {\n          num1: \"\",\n          operator: \"\",\n          num2: \"\",\n          result: \"\",\n          activeBlock: \"num1\"\n        };\n      }\n\n      // Si hay un resultado y se detecta un número, iniciamos un nuevo cálculo\n      if (prev.result !== '' && (!isNaN(Number(prediction)) || prediction === '.')) {\n        return {\n          num1: prediction,\n          operator: '',\n          num2: '',\n          result: '',\n          activeBlock: 'operator'\n        };\n      }\n\n      // Numérico (incluye el punto decimal)\n      if (!isNaN(Number(prediction)) || prediction === '.') {\n        const char = prediction;\n        if (prev.activeBlock === 'num1' || prev.activeBlock === 'operator') {\n          if (char === '.' && prev.num1.includes('.')) return prev;\n          // Permitir que el usuario siga escribiendo Num1 hasta que ponga un operador\n          return {\n            ...prev,\n            num1: prev.num1 + char,\n            activeBlock: 'operator'\n          };\n        }\n        if (prev.activeBlock === 'num2' || prev.activeBlock === 'complete') {\n          if (char === '.' && prev.num2.includes('.')) return prev;\n          // Se marca como 'complete' cuando se ingresa el segundo número\n          return {\n            ...prev,\n            num2: prev.num2 + char,\n            activeBlock: 'complete'\n          };\n        }\n        return prev;\n      }\n\n      // Operador\n      if ([\"+\", \"-\", \"*\", \"/\"].includes(prediction)) {\n        if (prev.num1) {\n          // Si ya hay un Num1, permitimos establecer el operador y pasar a Num2\n          return {\n            ...prev,\n            operator: prediction,\n            num2: \"\",\n            activeBlock: \"num2\"\n          };\n        }\n        return prev;\n      }\n\n      // La seña de \"equal\" ahora se ignora a favor del botón\n      if (prediction === \"equal\" && prev.num1 && prev.operator && prev.num2) {\n        toast(\"Presiona 'Calcular Resultado' para completar.\", {\n          icon: \"👆\"\n        });\n      }\n      return prev;\n    });\n  }, []);\n\n  /**\r\n   * Función para llamar a la API de predicción (simulada)\r\n   */\n  const recognizeSign = useCallback(async (isAuto = false) => {\n    if (!currentLandmarksRef.current) {\n      if (!isAuto) toast.error(\"No se detecta la mano\");\n      return;\n    }\n    if (isPredicting) return;\n    setIsPredicting(true);\n    try {\n      const payload = {\n        modelId,\n        landmarks: currentLandmarksRef.current\n      };\n      const response = await api.post(\"/prediction/predict\", payload);\n      const {\n        prediction,\n        confidence\n      } = response.data;\n      if (confidence < MIN_CONFIDENCE_THRESHOLD) {\n        if (!isAuto) toast.error(\"Seña no clara o baja confianza\");\n        lastPredictionRef.current = null;\n        return;\n      }\n\n      // Evitar repetir la misma predicción en modo automático\n      if (isAuto && prediction === lastPredictionRef.current) {\n        return;\n      }\n      lastPredictionRef.current = prediction;\n      processPrediction(prediction);\n    } catch (err) {\n      console.error(\"Error en predict:\", err);\n      if (!isAuto) toast.error(\"Error comunicando con el modelo\");\n    } finally {\n      setIsPredicting(false);\n    }\n  }, [modelId, isPredicting, processPrediction]);\n\n  /**\r\n   * Efecto para el reconocimiento automático (Intervalo)\r\n   */\n  useEffect(() => {\n    if (cameraActive && isAutoRecognizing) {\n      // Limpiar cualquier intervalo existente\n      if (recognitionIntervalRef.current !== undefined) {\n        clearInterval(recognitionIntervalRef.current);\n      }\n\n      // Establecer el nuevo intervalo\n      const id = window.setInterval(() => {\n        if (currentLandmarksRef.current) recognizeSign(true);\n      }, RECOGNITION_INTERVAL_MS);\n      recognitionIntervalRef.current = id;\n\n      // Función de limpieza\n      return () => {\n        if (recognitionIntervalRef.current !== undefined) {\n          clearInterval(recognitionIntervalRef.current);\n          recognitionIntervalRef.current = undefined;\n        }\n      };\n    } else {\n      // Limpiar si se desactiva la cámara o el auto-reconocimiento\n      if (recognitionIntervalRef.current !== undefined) {\n        clearInterval(recognitionIntervalRef.current);\n        recognitionIntervalRef.current = undefined;\n      }\n    }\n  }, [cameraActive, isAutoRecognizing, recognizeSign]);\n\n  // Limpieza al desmontar el componente\n  useEffect(() => {\n    return () => {\n      stopCamera();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const isReadyToCalculate = !!(calcState.num1 && calcState.operator && calcState.num2);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-1 md:grid-cols-4 gap-8 p-4 font-['Inter'] min-h-screen bg-gray-50 dark:bg-gray-900 transition-colors duration-500\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"md:col-span-1 space-y-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `rounded-2xl shadow-xl p-5 ${isDarkMode ? \"bg-gray-800 border border-gray-700\" : \"bg-white border border-gray-200\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: `font-extrabold text-xl mb-4 ${isDarkMode ? \"text-white\" : \"text-gray-900\"}`,\n          children: \"Controles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n          whileHover: {\n            scale: 1.02\n          },\n          whileTap: {\n            scale: 0.98\n          },\n          onClick: cameraActive ? stopCamera : startCamera,\n          disabled: isInitializing,\n          className: `w-full px-4 py-3 rounded-xl font-bold text-white transition-all duration-300 flex items-center justify-center gap-2 shadow-lg ${isInitializing ? \"bg-gray-500 cursor-not-allowed\" : cameraActive ? \"bg-red-600 hover:bg-red-700\" : \"bg-blue-600 hover:bg-blue-700\"}`,\n          children: [isInitializing ? /*#__PURE__*/_jsxDEV(RefreshCw, {\n            className: \"animate-spin w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 31\n          }, this) : /*#__PURE__*/_jsxDEV(Power, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 80\n          }, this), isInitializing ? \"Inicializando...\" : cameraActive ? \"Detener Cámara\" : \"Iniciar Cámara\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, this), cameraActive && /*#__PURE__*/_jsxDEV(motion.button, {\n          whileHover: {\n            scale: 1.02\n          },\n          whileTap: {\n            scale: 0.98\n          },\n          onClick: () => setIsAutoRecognizing(p => !p),\n          className: `mt-3 w-full px-4 py-3 rounded-xl font-bold text-white transition-all duration-300 flex items-center justify-center gap-2 shadow-lg ${isAutoRecognizing ? \"bg-purple-600 hover:bg-purple-700\" : \"bg-yellow-600 hover:bg-yellow-700\"}`,\n          children: [/*#__PURE__*/_jsxDEV(Zap, {\n            className: `w-5 h-5 ${isAutoRecognizing ? \"animate-pulse\" : \"\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 15\n          }, this), isAutoRecognizing ? \"Auto ON\" : \"Auto OFF\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 13\n        }, this), cameraActive && !isAutoRecognizing && /*#__PURE__*/_jsxDEV(motion.button, {\n          whileHover: {\n            scale: 1.02\n          },\n          whileTap: {\n            scale: 0.98\n          },\n          onClick: () => recognizeSign(false),\n          disabled: isPredicting || !handsDetected,\n          className: `mt-3 w-full px-4 py-3 rounded-xl font-bold text-white transition-all duration-300 flex items-center justify-center gap-2 ${isPredicting ? \"bg-indigo-400 cursor-wait\" : \"bg-indigo-600 hover:bg-indigo-700\"} disabled:opacity-50`,\n          children: [isPredicting ? /*#__PURE__*/_jsxDEV(RefreshCw, {\n            className: \"animate-spin w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 31\n          }, this) : \"✋\", \"Reconocer (Manual)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 13\n        }, this), (calcState.num1 || calcState.operator || calcState.num2 || calcState.result) && /*#__PURE__*/_jsxDEV(motion.button, {\n          whileHover: {\n            scale: 1.02\n          },\n          whileTap: {\n            scale: 0.98\n          },\n          onClick: resetCalculator,\n          className: \"mt-3 w-full px-4 py-3 rounded-xl font-bold text-white transition-all duration-300 flex items-center justify-center gap-2 bg-pink-600 hover:bg-pink-700 shadow-lg\",\n          children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 15\n          }, this), \"Limpiar Todo\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `rounded-2xl shadow-xl p-5 ${isDarkMode ? \"bg-gray-800 border border-gray-700\" : \"bg-white border border-gray-200\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: `font-extrabold text-xl mb-2 ${isDarkMode ? \"text-white\" : \"text-gray-900\"}`,\n          children: \"Estado del Sistema\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"flex items-center gap-2 font-medium\",\n          children: handsDetected ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-green-500 flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n              className: \"w-5 h-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 17\n            }, this), \" Mano detectada\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-red-500 flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(XCircle, {\n              className: \"w-5 h-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 17\n            }, this), \" Esperando mano\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 11\n        }, this), isAutoRecognizing && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"flex items-center gap-2 mt-2 text-purple-500 font-medium\",\n          children: [/*#__PURE__*/_jsxDEV(Zap, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 15\n          }, this), \" Reconocimiento Autom\\xE1tico Activo\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"md:col-span-3 space-y-6\",\n      children: [/*#__PURE__*/_jsxDEV(motion.h2, {\n        initial: {\n          opacity: 0,\n          y: 10\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        className: `text-3xl font-extrabold text-center ${isDarkMode ? \"text-blue-300\" : \"text-gray-800\"}`,\n        children: \"Calculadora con Lenguaje de Se\\xF1as\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative bg-black rounded-2xl overflow-hidden shadow-2xl mx-auto max-w-2xl aspect-video\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          className: \"hidden\",\n          autoPlay: true,\n          muted: true,\n          playsInline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          width: 640,\n          height: 480,\n          className: \"w-full h-full object-cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 11\n        }, this), !cameraActive && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute inset-0 flex flex-col items-center justify-center bg-gray-900/90 text-white p-4\",\n          children: [/*#__PURE__*/_jsxDEV(Power, {\n            className: \"w-10 h-10 mb-3 text-red-400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-lg font-medium\",\n            children: \"Pulsa \\\"Iniciar C\\xE1mara\\\" para comenzar.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 15\n          }, this), isInitializing && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-2 text-sm text-gray-400 flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n              className: \"w-5 h-5 animate-spin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 100\n            }, this), \" Cargando...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-2xl mx-auto p-4 rounded-2xl shadow-2xl space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-5 gap-4 items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-span-2\",\n            children: /*#__PURE__*/_jsxDEV(InputBlock, {\n              title: \"N\\xDAMERO 1\",\n              value: calcState.num1,\n              isActive: calcState.activeBlock === \"num1\" || calcState.activeBlock === \"operator\",\n              dark: isDarkMode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-span-1\",\n            children: /*#__PURE__*/_jsxDEV(InputBlock, {\n              title: \"OPERADOR\",\n              value: calcState.operator,\n              isActive: calcState.activeBlock === \"operator\" || calcState.activeBlock === \"num2\",\n              dark: isDarkMode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-span-2\",\n            children: /*#__PURE__*/_jsxDEV(InputBlock, {\n              title: \"N\\xDAMERO 2\",\n              value: calcState.num2,\n              isActive: calcState.activeBlock === \"num2\" || calcState.activeBlock === \"complete\",\n              dark: isDarkMode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n          onClick: calculateResult,\n          disabled: !isReadyToCalculate,\n          whileHover: {\n            scale: isReadyToCalculate ? 1.01 : 1\n          },\n          whileTap: {\n            scale: isReadyToCalculate ? 0.99 : 1\n          },\n          className: `w-full py-4 rounded-xl font-bold text-lg transition-all duration-300 shadow-xl flex items-center justify-center gap-3 mt-4 ${isReadyToCalculate ? \"bg-green-600 hover:bg-green-700 text-white\" : \"bg-gray-400 text-gray-700 cursor-not-allowed\"}`,\n          children: [/*#__PURE__*/_jsxDEV(Equal, {\n            className: \"w-6 h-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 15\n          }, this), \"CALCULAR RESULTADO\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `w-full p-6 rounded-2xl shadow-inner transition-colors duration-300 ${isDarkMode ? \"bg-gray-700 border-2 border-indigo-600\" : \"bg-white border-2 border-indigo-400\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: `text-right text-sm uppercase font-semibold ${isDarkMode ? \"text-indigo-400\" : \"text-indigo-600\"}`,\n            children: \"Resultado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `text-right text-6xl font-extrabold mt-1 transition-colors duration-300 ${isDarkMode ? \"text-white\" : \"text-gray-900\"}`,\n            children: /*#__PURE__*/_jsxDEV(motion.span, {\n              initial: {\n                y: 20,\n                opacity: 0\n              },\n              animate: {\n                y: 0,\n                opacity: 1\n              },\n              transition: {\n                duration: 0.3\n              },\n              children: calcState.result || \"0\"\n            }, calcState.result, false, {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 482,\n    columnNumber: 5\n  }, this);\n};\n_s(SignLanguageCalculator, \"Yv3qLp0j6plkuErFz0Dx9AMivII=\");\n_c2 = SignLanguageCalculator;\nexport default SignLanguageCalculator;\nvar _c, _c2;\n$RefreshReg$(_c, \"InputBlock\");\n$RefreshReg$(_c2, \"SignLanguageCalculator\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","useMemo","motion","XCircle","CheckCircle","RefreshCw","Power","Zap","Equal","toast","jsxDEV","_jsxDEV","api","post","path","data","mockPredictions","randomPrediction","Math","floor","random","length","Promise","resolve","setTimeout","prediction","confidence","createMediaPipeHandler","stream","animationFrameId","videoElement","canvasElement","onResultsCallback","runDetectionLoop","cancelAnimationFrame","canvasCtx","getContext","save","clearRect","width","height","readyState","HAVE_ENOUGH_DATA","drawImage","fillStyle","fillRect","shouldSimulateHands","mockResults","multiHandLandmarks","Array","from","_","i","x","y","z","image","multiHandedness","label","score","restore","requestAnimationFrame","initialize","video","canvas","onResults","navigator","mediaDevices","getUserMedia","srcObject","onloadedmetadata","play","error","console","stop","getTracks","forEach","track","font","textAlign","fillText","RECOGNITION_INTERVAL_MS","MIN_CONFIDENCE_THRESHOLD","safeEvaluateExpression","expr","sanitized","replace","val","Function","isFinite","String","InputBlock","title","value","isActive","dark","base","bg","border","text","titleColor","div","className","animate","scale","transition","type","stiffness","damping","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","SignLanguageCalculator","modelId","_s","videoRef","canvasRef","mediaPipeHandler","cameraActive","setCameraActive","isInitializing","setIsInitializing","handsDetected","setHandsDetected","isAutoRecognizing","setIsAutoRecognizing","isPredicting","setIsPredicting","calcState","setCalcState","num1","operator","num2","result","activeBlock","lastPredictionRef","currentLandmarksRef","recognitionIntervalRef","undefined","isDarkMode","document","body","classList","contains","results","hasHands","rawLandmarks","current","map","l","startCamera","ok","Error","success","err","stopCamera","clearInterval","resetCalculator","icon","calculateResult","prev","expression","evalResult","processPrediction","isNaN","Number","char","includes","recognizeSign","isAuto","payload","landmarks","response","id","window","setInterval","isReadyToCalculate","button","whileHover","whileTap","onClick","disabled","p","h2","initial","opacity","ref","autoPlay","muted","playsInline","span","duration","_c2","$RefreshReg$"],"sources":["C:/Users/quisp/Desktop/FinalProject/frontend/src/components/SignLanguageCalculator.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback, useMemo } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport {\r\n  XCircle,\r\n  CheckCircle,\r\n  RefreshCw,\r\n  Power,\r\n  Zap,\r\n  Equal,\r\n} from \"lucide-react\"; \r\nimport toast from \"react-hot-toast\";\r\n\r\n// =========================================================================\r\n//                           SIMULACIÓN DE MEDIAPIPE Y API\r\n// =========================================================================\r\n\r\n// Tipado simulado para los resultados de MediaPipe\r\ninterface Landmark { x: number; y: number; z: number; visibility?: number; }\r\ninterface HandResult { label: 'Left' | 'Right'; score: number; }\r\n\r\ninterface Results {\r\n    // ESTE era el punto de error: puede ser 'null' si no se detectan manos.\r\n    multiHandLandmarks: Landmark[][] | null; \r\n    multiHandedness: HandResult[] | null;\r\n    image: HTMLCanvasElement;\r\n}\r\n\r\n// SIMULACIÓN DE LA API de Predicción (en un entorno real, esto sería una llamada HTTP)\r\nconst api = {\r\n  post: async (path: string, data: any) => {\r\n    // Simulación de las predicciones que haría un modelo real (números y operadores)\r\n    const mockPredictions = [\"1\", \"2\", \"+\", \"3\", \"*\", \"4\", \"5\", \"-\", \"6\", \"7\", \"8\", \"/\", \"9\", \"0\", \"clear\"];\r\n    const randomPrediction = mockPredictions[Math.floor(Math.random() * mockPredictions.length)];\r\n    await new Promise(resolve => setTimeout(resolve, 150)); // Simula latencia\r\n    return { \r\n        data: { \r\n            prediction: randomPrediction, \r\n            confidence: Math.random() * 0.3 + 0.7 // Confianza mínima 70%\r\n        }\r\n    };\r\n  }\r\n};\r\n\r\n// SIMULACIÓN DEL MANEJADOR DE MEDIA PIPE (Cámara y Detección)\r\ninterface MediaPipeHandler {\r\n    initialize: (videoElement: HTMLVideoElement, canvasElement: HTMLCanvasElement, onResults: (results: Results) => void) => Promise<boolean>;\r\n    stop: () => void;\r\n}\r\n\r\nconst createMediaPipeHandler = (): MediaPipeHandler => {\r\n    let stream: MediaStream | null = null;\r\n    let animationFrameId: number | null = null;\r\n    let videoElement: HTMLVideoElement | null = null;\r\n    let canvasElement: HTMLCanvasElement | null = null;\r\n    let onResultsCallback: ((results: Results) => void) | null = null;\r\n\r\n    const runDetectionLoop = () => {\r\n        if (!videoElement || !canvasElement || !onResultsCallback) {\r\n            if (animationFrameId !== null) cancelAnimationFrame(animationFrameId);\r\n            return;\r\n        }\r\n\r\n        const canvasCtx = canvasElement.getContext('2d');\r\n        if (!canvasCtx) return;\r\n\r\n        canvasCtx.save();\r\n        canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\r\n\r\n        // Simula la captura de video\r\n        if (videoElement.readyState === videoElement.HAVE_ENOUGH_DATA) {\r\n            canvasCtx.drawImage(videoElement, 0, 0, canvasElement.width, canvasElement.height);\r\n        } else {\r\n             // Si el video no está cargado o detenido, muestra un fondo\r\n            canvasCtx.fillStyle = 'black';\r\n            canvasCtx.fillRect(0, 0, canvasElement.width, canvasElement.height);\r\n        }\r\n        \r\n        // Lógica de simulación de detección de manos\r\n        const shouldSimulateHands = stream && Math.random() > 0.1; // 90% de probabilidad de tener manos\r\n        const mockResults: Results = {\r\n            multiHandLandmarks: shouldSimulateHands ? [[ \r\n                // Simulación de 21 landmarks (puntos de la mano)\r\n                Array.from({ length: 21 }, (_, i) => ({ x: Math.random(), y: Math.random(), z: Math.random() })) as Landmark[] \r\n            ]] : null, // Puede ser NULL, activando la corrección de TS\r\n            image: canvasElement,\r\n            multiHandedness: shouldSimulateHands ? [{ label: 'Right', score: 0.9 }] : null,\r\n        } as unknown as Results; \r\n\r\n        onResultsCallback(mockResults);\r\n\r\n        canvasCtx.restore();\r\n        animationFrameId = requestAnimationFrame(runDetectionLoop);\r\n    };\r\n\r\n    const initialize = async (video: HTMLVideoElement, canvas: HTMLCanvasElement, onResults: (results: Results) => void) => {\r\n        videoElement = video;\r\n        canvasElement = canvas;\r\n        onResultsCallback = onResults;\r\n\r\n        try {\r\n            stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n            video.srcObject = stream;\r\n            \r\n            await new Promise((resolve) => {\r\n                video.onloadedmetadata = () => {\r\n                    video.play();\r\n                    resolve(true);\r\n                };\r\n            });\r\n\r\n            runDetectionLoop();\r\n            return true;\r\n        } catch (error) {\r\n            console.error(\"Error al acceder a la cámara:\", error);\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const stop = () => {\r\n        if (animationFrameId !== null) {\r\n            cancelAnimationFrame(animationFrameId);\r\n            animationFrameId = null;\r\n        }\r\n        if (stream) {\r\n            stream.getTracks().forEach(track => track.stop());\r\n            stream = null;\r\n            if (videoElement) {\r\n                videoElement.srcObject = null;\r\n            }\r\n        }\r\n        // Limpiar el canvas al detener\r\n        if (canvasElement) {\r\n            const canvasCtx = canvasElement.getContext('2d');\r\n            if (canvasCtx) {\r\n                 canvasCtx.clearRect(0, 0, canvasElement.width, canvasElement.height);\r\n                 canvasCtx.fillStyle = '#4b5563'; // gris oscuro\r\n                 canvasCtx.fillRect(0, 0, canvasElement.width, canvasElement.height);\r\n                 canvasCtx.fillStyle = 'white';\r\n                 canvasCtx.font = '24px Inter, sans-serif';\r\n                 canvasCtx.textAlign = 'center';\r\n                 canvasCtx.fillText('Cámara detenida', canvasElement.width / 2, canvasElement.height / 2);\r\n            }\r\n        }\r\n    };\r\n\r\n    return { initialize, stop };\r\n};\r\n// =========================================================================\r\n\r\n/**\r\n * Tipos y Constantes\r\n */\r\ntype Props = {\r\n  modelId: string;\r\n};\r\n\r\nconst RECOGNITION_INTERVAL_MS = 650;\r\nconst MIN_CONFIDENCE_THRESHOLD = 0.7;\r\n\r\ninterface CalculationState {\r\n  num1: string;\r\n  operator: string;\r\n  num2: string;\r\n  result: string;\r\n  activeBlock: \"num1\" | \"operator\" | \"num2\" | \"complete\";\r\n}\r\n\r\n/**\r\n * Función auxiliar para evaluar expresiones de forma segura (sin `eval`)\r\n */\r\nconst safeEvaluateExpression = (expr: string): string => {\r\n  // Solo permite números, operadores (+, -, *, /) y punto decimal.\r\n  const sanitized = expr.replace(/[^0-9+\\-*/.]/g, \"\");\r\n  if (!sanitized) return \"0\";\r\n  try {\r\n    // eslint-disable-next-line no-new-func\r\n    const val = Function(`\"use strict\"; return (${sanitized});`)();\r\n    if (typeof val === \"number\" && isFinite(val)) return String(val);\r\n    return \"Error\";\r\n  } catch {\r\n    return \"Error\";\r\n  }\r\n};\r\n\r\n/**\r\n * Componente visual para los bloques de entrada\r\n */\r\nconst InputBlock: React.FC<{ title: string; value: string; isActive: boolean; dark?: boolean }> = ({ title, value, isActive, dark }) => {\r\n  const base = \"p-4 rounded-xl font-bold text-center border-2 transition-all duration-300 shadow-md\";\r\n  const bg = dark ? \"bg-gray-800\" : \"bg-white\";\r\n  const border = isActive ? \"border-indigo-400 ring-4 ring-indigo-500/30\" : dark ? \"border-gray-600\" : \"border-gray-300\";\r\n  const text = dark ? \"text-white\" : \"text-gray-900\";\r\n  const titleColor = dark ? \"text-gray-400\" : \"text-gray-600\";\r\n\r\n  return (\r\n    <motion.div\r\n      className={`${base} ${bg} ${border}`}\r\n      animate={{ scale: isActive ? 1.03 : 1 }}\r\n      transition={{ type: \"spring\", stiffness: 300, damping: 25 }}\r\n    >\r\n      <p className={`text-sm uppercase tracking-wider ${titleColor}`}>{title}</p>\r\n      <div className={`text-3xl mt-1 ${text}`}>{value || (isActive ? \"✋\" : \"—\")}</div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\n/**\r\n * Componente principal\r\n */\r\nconst SignLanguageCalculator: React.FC<Props> = ({ modelId }) => {\r\n  const videoRef = useRef<HTMLVideoElement>(null);\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const mediaPipeHandler = useRef<MediaPipeHandler | null>(null); \r\n\r\n  const [cameraActive, setCameraActive] = useState(false);\r\n  const [isInitializing, setIsInitializing] = useState(false);\r\n  const [handsDetected, setHandsDetected] = useState(false);\r\n  const [isAutoRecognizing, setIsAutoRecognizing] = useState(true);\r\n  const [isPredicting, setIsPredicting] = useState(false);\r\n\r\n  const [calcState, setCalcState] = useState<CalculationState>({\r\n    num1: \"\",\r\n    operator: \"\",\r\n    num2: \"\",\r\n    result: \"\",\r\n    activeBlock: \"num1\",\r\n  });\r\n\r\n  const lastPredictionRef = useRef<string | null>(null);\r\n  // Almacena solo los landmarks necesarios para la predicción\r\n  const currentLandmarksRef = useRef<Landmark[] | null>(null); \r\n  // Usa number | undefined, que es el tipo correcto para window.setInterval/clearInterval\r\n  const recognitionIntervalRef = useRef<number | undefined>(undefined); \r\n\r\n  const isDarkMode = useMemo(() => document.body.classList.contains(\"dark\"), []);\r\n\r\n  /**\r\n   * CORRECCIÓN 1: Manejo robusto de `null` para `multiHandLandmarks`\r\n   * Callback que recibe los resultados simulados de MediaPipe.\r\n   */\r\n  const onResults = useCallback((results: Results) => {\r\n    // ⚠️ Corrección: Verificamos explícitamente si es null y si el array tiene elementos.\r\n    const hasHands = !!(results.multiHandLandmarks && results.multiHandLandmarks.length > 0);\r\n    setHandsDetected(hasHands);\r\n\r\n    if (hasHands) {\r\n      // Si hay manos, el array no será null. Usamos el primer array de landmarks.\r\n      const rawLandmarks = results.multiHandLandmarks[0]; \r\n      \r\n      // Asumimos que el modelo solo necesita las coordenadas x, y, z\r\n      if (rawLandmarks && rawLandmarks.length > 0) {\r\n        currentLandmarksRef.current = rawLandmarks.map(l => ({ x: l.x, y: l.y, z: l.z }));\r\n      } else {\r\n        currentLandmarksRef.current = null;\r\n      }\r\n    } else {\r\n      currentLandmarksRef.current = null;\r\n    }\r\n  }, []);\r\n\r\n  /**\r\n   * Inicializa la cámara y el manejador de MediaPipe\r\n   */\r\n  const startCamera = useCallback(async () => {\r\n    if (!videoRef.current || !canvasRef.current) {\r\n      toast.error(\"No se encontró video/canvas\");\r\n      return;\r\n    }\r\n    setIsInitializing(true);\r\n    try {\r\n      if (mediaPipeHandler.current) mediaPipeHandler.current.stop();\r\n      mediaPipeHandler.current = createMediaPipeHandler();\r\n      const ok = await mediaPipeHandler.current.initialize(videoRef.current, canvasRef.current, onResults);\r\n      if (!ok) throw new Error(\"Error inicializando MediaPipe\");\r\n      setCameraActive(true);\r\n      setIsAutoRecognizing(true);\r\n      toast.success(\"Cámara iniciada\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      toast.error(\"No se pudo iniciar la cámara\");\r\n    } finally {\r\n      setIsInitializing(false);\r\n    }\r\n  }, [onResults]);\r\n\r\n  /**\r\n   * CORRECCIÓN 2: Manejo de `undefined` para `clearInterval`\r\n   * Detiene la cámara y limpia el intervalo de reconocimiento.\r\n   */\r\n  const stopCamera = useCallback(() => {\r\n    if (mediaPipeHandler.current) mediaPipeHandler.current.stop();\r\n    setCameraActive(false);\r\n    setIsAutoRecognizing(false);\r\n    setHandsDetected(false);\r\n    currentLandmarksRef.current = null;\r\n    lastPredictionRef.current = null;\r\n\r\n    // ⚠️ Corrección: Verificamos si la referencia tiene un valor antes de limpiar.\r\n    if (recognitionIntervalRef.current !== undefined) {\r\n      clearInterval(recognitionIntervalRef.current);\r\n      recognitionIntervalRef.current = undefined; // Lo reiniciamos al estado inicial seguro\r\n    }\r\n    toast.success(\"Cámara detenida\");\r\n  }, []);\r\n\r\n  // reset calculator state\r\n  const resetCalculator = useCallback(() => {\r\n    setCalcState({ num1: \"\", operator: \"\", num2: \"\", result: \"\", activeBlock: \"num1\" });\r\n    toast(\"Calculadora limpia\", { icon: \"🧹\" });\r\n  }, []);\r\n  \r\n  /**\r\n   * Ejecuta la lógica de cálculo\r\n   */\r\n  const calculateResult = useCallback(() => {\r\n    setCalcState(prev => {\r\n      if (!prev.num1 || !prev.operator || !prev.num2) {\r\n          toast.error(\"Asegúrate de tener un número, un operador y otro número.\", { icon: \"🤔\" });\r\n          return prev;\r\n      }\r\n\r\n      const expression = `${prev.num1}${prev.operator}${prev.num2}`;\r\n      const evalResult = safeEvaluateExpression(expression);\r\n\r\n      if (evalResult === \"Error\") {\r\n          toast.error(\"Expresión inválida\", { icon: \"⚠️\" });\r\n          return { ...prev, result: \"Error\" };\r\n      }\r\n\r\n      // Cálculo exitoso: el resultado se convierte en el Num1 para encadenar\r\n      toast.success(`Resultado: ${evalResult}`, { icon: \"✅\" });\r\n      return { \r\n          num1: evalResult, \r\n          operator: '', \r\n          num2: '', \r\n          result: evalResult, \r\n          activeBlock: 'operator' // Esperando el siguiente operador\r\n      };\r\n    });\r\n  }, []);\r\n\r\n\r\n  /**\r\n   * Procesa la predicción de la seña en el estado de la calculadora\r\n   */\r\n  const processPrediction = useCallback((prediction: string) => {\r\n    setCalcState((prev) => {\r\n      // Limpiar (Clear)\r\n      if (prediction === \"clear\") {\r\n        return { num1: \"\", operator: \"\", num2: \"\", result: \"\", activeBlock: \"num1\" };\r\n      }\r\n\r\n      // Si hay un resultado y se detecta un número, iniciamos un nuevo cálculo\r\n      if (prev.result !== '' && (!isNaN(Number(prediction)) || prediction === '.')) {\r\n        return { num1: prediction, operator: '', num2: '', result: '', activeBlock: 'operator' };\r\n      }\r\n\r\n\r\n      // Numérico (incluye el punto decimal)\r\n      if (!isNaN(Number(prediction)) || prediction === '.') {\r\n        const char = prediction;\r\n        if (prev.activeBlock === 'num1' || prev.activeBlock === 'operator') {\r\n            if (char === '.' && prev.num1.includes('.')) return prev;\r\n            // Permitir que el usuario siga escribiendo Num1 hasta que ponga un operador\r\n            return { ...prev, num1: prev.num1 + char, activeBlock: 'operator' }; \r\n        }\r\n        if (prev.activeBlock === 'num2' || prev.activeBlock === 'complete') {\r\n            if (char === '.' && prev.num2.includes('.')) return prev;\r\n            // Se marca como 'complete' cuando se ingresa el segundo número\r\n            return { ...prev, num2: prev.num2 + char, activeBlock: 'complete' };\r\n        }\r\n        return prev;\r\n      }\r\n\r\n      // Operador\r\n      if ([\"+\", \"-\", \"*\", \"/\"].includes(prediction)) {\r\n        if (prev.num1) {\r\n            // Si ya hay un Num1, permitimos establecer el operador y pasar a Num2\r\n            return { ...prev, operator: prediction, num2: \"\", activeBlock: \"num2\" };\r\n        }\r\n        return prev;\r\n      }\r\n      \r\n      // La seña de \"equal\" ahora se ignora a favor del botón\r\n      if (prediction === \"equal\" && prev.num1 && prev.operator && prev.num2) {\r\n          toast(\"Presiona 'Calcular Resultado' para completar.\", { icon: \"👆\" });\r\n      }\r\n\r\n      return prev;\r\n    });\r\n  }, []);\r\n\r\n  /**\r\n   * Función para llamar a la API de predicción (simulada)\r\n   */\r\n  const recognizeSign = useCallback(\r\n    async (isAuto = false) => {\r\n      if (!currentLandmarksRef.current) {\r\n        if (!isAuto) toast.error(\"No se detecta la mano\");\r\n        return;\r\n      }\r\n      if (isPredicting) return;\r\n      setIsPredicting(true);\r\n\r\n      try {\r\n        const payload = {\r\n          modelId,\r\n          landmarks: currentLandmarksRef.current,\r\n        };\r\n\r\n        const response = await api.post(\"/prediction/predict\", payload);\r\n        const { prediction, confidence } = response.data;\r\n\r\n        if (confidence < MIN_CONFIDENCE_THRESHOLD) {\r\n          if (!isAuto) toast.error(\"Seña no clara o baja confianza\");\r\n          lastPredictionRef.current = null;\r\n          return;\r\n        }\r\n\r\n        // Evitar repetir la misma predicción en modo automático\r\n        if (isAuto && prediction === lastPredictionRef.current) {\r\n          return;\r\n        }\r\n        lastPredictionRef.current = prediction;\r\n\r\n        processPrediction(prediction);\r\n      } catch (err) {\r\n        console.error(\"Error en predict:\", err);\r\n        if (!isAuto) toast.error(\"Error comunicando con el modelo\");\r\n      } finally {\r\n        setIsPredicting(false);\r\n      }\r\n    },\r\n    [modelId, isPredicting, processPrediction]\r\n  );\r\n\r\n  /**\r\n   * Efecto para el reconocimiento automático (Intervalo)\r\n   */\r\n  useEffect(() => {\r\n    if (cameraActive && isAutoRecognizing) {\r\n      // Limpiar cualquier intervalo existente\r\n      if (recognitionIntervalRef.current !== undefined) {\r\n        clearInterval(recognitionIntervalRef.current);\r\n      }\r\n      \r\n      // Establecer el nuevo intervalo\r\n      const id = window.setInterval(() => {\r\n        if (currentLandmarksRef.current) recognizeSign(true);\r\n      }, RECOGNITION_INTERVAL_MS);\r\n      \r\n      recognitionIntervalRef.current = id; \r\n\r\n      // Función de limpieza\r\n      return () => {\r\n        if (recognitionIntervalRef.current !== undefined) {\r\n          clearInterval(recognitionIntervalRef.current);\r\n          recognitionIntervalRef.current = undefined;\r\n        }\r\n      };\r\n    } else {\r\n      // Limpiar si se desactiva la cámara o el auto-reconocimiento\r\n      if (recognitionIntervalRef.current !== undefined) {\r\n        clearInterval(recognitionIntervalRef.current);\r\n        recognitionIntervalRef.current = undefined;\r\n      }\r\n    }\r\n  }, [cameraActive, isAutoRecognizing, recognizeSign]);\r\n\r\n  // Limpieza al desmontar el componente\r\n  useEffect(() => {\r\n    return () => {\r\n      stopCamera();\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  \r\n  const isReadyToCalculate = !!(calcState.num1 && calcState.operator && calcState.num2);\r\n\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8 p-4 font-['Inter'] min-h-screen bg-gray-50 dark:bg-gray-900 transition-colors duration-500\">\r\n      {/* SIDEBAR (Controles y Estado) */}\r\n      <aside className=\"md:col-span-1 space-y-6\">\r\n        <div className={`rounded-2xl shadow-xl p-5 ${isDarkMode ? \"bg-gray-800 border border-gray-700\" : \"bg-white border border-gray-200\"}`}>\r\n          <h3 className={`font-extrabold text-xl mb-4 ${isDarkMode ? \"text-white\" : \"text-gray-900\"}`}>Controles</h3>\r\n\r\n          {/* Botón Iniciar/Detener Cámara */}\r\n          <motion.button\r\n            whileHover={{ scale: 1.02 }}\r\n            whileTap={{ scale: 0.98 }}\r\n            onClick={cameraActive ? stopCamera : startCamera}\r\n            disabled={isInitializing}\r\n            className={`w-full px-4 py-3 rounded-xl font-bold text-white transition-all duration-300 flex items-center justify-center gap-2 shadow-lg ${\r\n              isInitializing ? \"bg-gray-500 cursor-not-allowed\" : cameraActive ? \"bg-red-600 hover:bg-red-700\" : \"bg-blue-600 hover:bg-blue-700\"\r\n            }`}\r\n          >\r\n            {isInitializing ? <RefreshCw className=\"animate-spin w-5 h-5\" /> : <Power className=\"w-5 h-5\" />}\r\n            {isInitializing ? \"Inicializando...\" : cameraActive ? \"Detener Cámara\" : \"Iniciar Cámara\"}\r\n          </motion.button>\r\n\r\n          {/* Botón de Auto-Reconocimiento */}\r\n          {cameraActive && (\r\n            <motion.button\r\n              whileHover={{ scale: 1.02 }}\r\n              whileTap={{ scale: 0.98 }}\r\n              onClick={() => setIsAutoRecognizing((p) => !p)}\r\n              className={`mt-3 w-full px-4 py-3 rounded-xl font-bold text-white transition-all duration-300 flex items-center justify-center gap-2 shadow-lg ${\r\n                isAutoRecognizing ? \"bg-purple-600 hover:bg-purple-700\" : \"bg-yellow-600 hover:bg-yellow-700\"\r\n              }`}\r\n            >\r\n              <Zap className={`w-5 h-5 ${isAutoRecognizing ? \"animate-pulse\" : \"\"}`} />\r\n              {isAutoRecognizing ? \"Auto ON\" : \"Auto OFF\"}\r\n            </motion.button>\r\n          )}\r\n\r\n          {/* Botón de Reconocimiento Manual */}\r\n          {cameraActive && !isAutoRecognizing && (\r\n            <motion.button\r\n              whileHover={{ scale: 1.02 }}\r\n              whileTap={{ scale: 0.98 }}\r\n              onClick={() => recognizeSign(false)}\r\n              disabled={isPredicting || !handsDetected}\r\n              className={`mt-3 w-full px-4 py-3 rounded-xl font-bold text-white transition-all duration-300 flex items-center justify-center gap-2 ${\r\n                isPredicting ? \"bg-indigo-400 cursor-wait\" : \"bg-indigo-600 hover:bg-indigo-700\"\r\n              } disabled:opacity-50`}\r\n            >\r\n              {isPredicting ? <RefreshCw className=\"animate-spin w-5 h-5\" /> : \"✋\"}\r\n              Reconocer (Manual)\r\n            </motion.button>\r\n          )}\r\n\r\n          {/* Botón de Limpiar Calculadora */}\r\n          {(calcState.num1 || calcState.operator || calcState.num2 || calcState.result) && (\r\n            <motion.button\r\n              whileHover={{ scale: 1.02 }}\r\n              whileTap={{ scale: 0.98 }}\r\n              onClick={resetCalculator}\r\n              className=\"mt-3 w-full px-4 py-3 rounded-xl font-bold text-white transition-all duration-300 flex items-center justify-center gap-2 bg-pink-600 hover:bg-pink-700 shadow-lg\"\r\n            >\r\n              <RefreshCw className=\"w-5 h-5\" />\r\n              Limpiar Todo\r\n            </motion.button>\r\n          )}\r\n        </div>\r\n\r\n        {/* Estado del Sistema */}\r\n        <div className={`rounded-2xl shadow-xl p-5 ${isDarkMode ? \"bg-gray-800 border border-gray-700\" : \"bg-white border border-gray-200\"}`}>\r\n          <h3 className={`font-extrabold text-xl mb-2 ${isDarkMode ? \"text-white\" : \"text-gray-900\"}`}>Estado del Sistema</h3>\r\n          <p className=\"flex items-center gap-2 font-medium\">\r\n            {handsDetected ? (\r\n              <span className=\"text-green-500 flex items-center gap-2\">\r\n                <CheckCircle className=\"w-5 h-5\" /> Mano detectada\r\n              </span>\r\n            ) : (\r\n              <span className=\"text-red-500 flex items-center gap-2\">\r\n                <XCircle className=\"w-5 h-5\" /> Esperando mano\r\n              </span>\r\n            )}\r\n          </p>\r\n          {isAutoRecognizing && (\r\n            <p className=\"flex items-center gap-2 mt-2 text-purple-500 font-medium\">\r\n              <Zap className=\"w-5 h-5\" /> Reconocimiento Automático Activo\r\n            </p>\r\n          )}\r\n        </div>\r\n      </aside>\r\n\r\n      {/* MAIN (Cámara y Calculadora) */}\r\n      <section className=\"md:col-span-3 space-y-6\">\r\n        <motion.h2 initial={{ opacity: 0, y: 10 }} animate={{ opacity: 1, y: 0 }} className={`text-3xl font-extrabold text-center ${isDarkMode ? \"text-blue-300\" : \"text-gray-800\"}`}>\r\n          Calculadora con Lenguaje de Señas\r\n        </motion.h2>\r\n\r\n        {/* Área de Video/Canvas */}\r\n        <div className=\"relative bg-black rounded-2xl overflow-hidden shadow-2xl mx-auto max-w-2xl aspect-video\">\r\n          <video ref={videoRef as any} className=\"hidden\" autoPlay muted playsInline />\r\n          <canvas ref={canvasRef as any} width={640} height={480} className=\"w-full h-full object-cover\" />\r\n          {!cameraActive && (\r\n            <div className=\"absolute inset-0 flex flex-col items-center justify-center bg-gray-900/90 text-white p-4\">\r\n              <Power className=\"w-10 h-10 mb-3 text-red-400\" />\r\n              <p className=\"text-lg font-medium\">Pulsa \"Iniciar Cámara\" para comenzar.</p>\r\n              {isInitializing && <p className=\"mt-2 text-sm text-gray-400 flex items-center gap-2\"><RefreshCw className=\"w-5 h-5 animate-spin\" /> Cargando...</p>}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Interfaz de la Calculadora */}\r\n        <div className=\"max-w-2xl mx-auto p-4 rounded-2xl shadow-2xl space-y-4\">\r\n          <div className=\"grid grid-cols-5 gap-4 items-center\">\r\n            <div className=\"col-span-2\">\r\n              <InputBlock title=\"NÚMERO 1\" value={calcState.num1} isActive={calcState.activeBlock === \"num1\" || calcState.activeBlock === \"operator\"} dark={isDarkMode} />\r\n            </div>\r\n            <div className=\"col-span-1\">\r\n              <InputBlock title=\"OPERADOR\" value={calcState.operator} isActive={calcState.activeBlock === \"operator\" || calcState.activeBlock === \"num2\"} dark={isDarkMode} />\r\n            </div>\r\n            <div className=\"col-span-2\">\r\n              <InputBlock title=\"NÚMERO 2\" value={calcState.num2} isActive={calcState.activeBlock === \"num2\" || calcState.activeBlock === \"complete\"} dark={isDarkMode} />\r\n            </div>\r\n          </div>\r\n\r\n          {/* BOTÓN DE CALCULAR RESULTADO */}\r\n          <motion.button\r\n              onClick={calculateResult}\r\n              disabled={!isReadyToCalculate}\r\n              whileHover={{ scale: isReadyToCalculate ? 1.01 : 1 }}\r\n              whileTap={{ scale: isReadyToCalculate ? 0.99 : 1 }}\r\n              className={`w-full py-4 rounded-xl font-bold text-lg transition-all duration-300 shadow-xl flex items-center justify-center gap-3 mt-4 ${\r\n                  isReadyToCalculate \r\n                      ? \"bg-green-600 hover:bg-green-700 text-white\" \r\n                      : \"bg-gray-400 text-gray-700 cursor-not-allowed\"\r\n              }`}\r\n          >\r\n              <Equal className=\"w-6 h-6\" />\r\n              CALCULAR RESULTADO\r\n          </motion.button>\r\n\r\n          {/* Display de Resultado */}\r\n          <div className={`w-full p-6 rounded-2xl shadow-inner transition-colors duration-300 ${isDarkMode ? \"bg-gray-700 border-2 border-indigo-600\" : \"bg-white border-2 border-indigo-400\"}`}>\r\n            <p className={`text-right text-sm uppercase font-semibold ${isDarkMode ? \"text-indigo-400\" : \"text-indigo-600\"}`}>Resultado</p>\r\n            <div className={`text-right text-6xl font-extrabold mt-1 transition-colors duration-300 ${isDarkMode ? \"text-white\" : \"text-gray-900\"}`}>\r\n              <motion.span key={calcState.result} initial={{ y: 20, opacity: 0 }} animate={{ y: 0, opacity: 1 }} transition={{ duration: 0.3 }}>\r\n                {calcState.result || \"0\"}\r\n              </motion.span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignLanguageCalculator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}